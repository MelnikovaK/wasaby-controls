<div class="controls-BaseControl controls-BaseControl__lastRowActions_{{_options.itemActionsPosition}}" on:showIndicator="_showIndicator()" on:hideIndicator="_hideIndicator()">
    <ws:if data="{{_needScrollCalculation}}">
        <div class="controls-BaseControl__trigger controls-BaseControl__topListTrigger" name="topListTrigger"></div>
        <div class="controls-BaseControl__topPlaceholder" style="height: {{_topPlaceholderHeight}}px;"></div>
        <div class="controls-BaseControl__trigger controls-BaseControl__topLoadTrigger" name="topLoadTrigger" style="bottom: -{{_loadOffset}}px;"></div>
    </ws:if>

   <ws:template name="withDragNDrop">
      <Controls.DragNDrop.Controller
         on:dragStart="_dragStart()"
         on:dragEnd="_dragEnd()"
         on:dragLeave="_dragLeave()"
         on:documentDragEnd="_documentDragEnd()"
         on:documentDragStart="_documentDragStart()"
         draggingTemplate="{{_options.draggingTemplate}}"
         name="dragNDropController">
         <ws:content>
            <ws:partial template="{{viewContent}}" />
         </ws:content>
      </Controls.DragNDrop.Controller>
   </ws:template>

   <ws:template name="viewTpl">
      <ws:partial
         name="{{name}}"
         template="{{ _options.content }}"
         scope="{{_options}}"
         listModel="{{_listViewModel}}"
         on:markedKeyChanged="_markedKeyChangedHandler()"
         on:itemClick="_onItemClick()"
         on:groupClick="_onGroupClick()"
         on:itemContextMenu="_showActionsMenu()"
         on:itemMouseDown="_itemMouseDown()"
         on:itemMouseEnter="_itemMouseEnter()"
         on:itemSwipe="_listSwipe()">
         <ws:viewTemplate>
            <ws:partial template="{{_options.viewName}}"/>
         </ws:viewTemplate>
         <ws:multiSelectTpl>
             <ws:if data="{{_options.multiSelectVisibility}}">
                 <Controls.Container.Async name="multiSelectContainer" templateName="tmpl!Controls/List/BaseControl/multiSelect">
                     <ws:partial template="{{'tmpl!Controls/List/BaseControl/multiSelect'}}" />
                 </Controls.Container.Async>
             </ws:if>
         </ws:multiSelectTpl>
      </ws:partial>
   </ws:template>

   <ws:template name="fullView">
      <ws:if data="{{_options.itemsDragNDrop}}">
         <ws:partial template="withDragNDrop">
            <ws:viewContent>
               <ws:partial template="viewTpl"  name="{{name}}"/>
            </ws:viewContent>
         </ws:partial>
      </ws:if>
      <ws:else>
         <ws:partial template="viewTpl" name="{{name}}"/>
      </ws:else>
   </ws:template>

    <ws:template name="serverTemplate">
        <ws:partial template="fullView" name="listView"/>

        <Controls.List.EditInPlace
                ws:content="listView"
                name="editInPlace"
                editingConfig="{{_options.editingConfig}}"
                on:beforeItemAdd="_onBeforeItemAdd()"
                on:beforeItemEdit="_onBeforeItemEdit()"
                on:afterItemEdit="_onAfterItemEdit()"
                on:beforeItemEndEdit="_onBeforeItemEndEdit()"
                on:afterItemEndEdit="_onAfterItemEndEdit()"
                listModel="{{_listViewModel}}"
                source="{{_sourceController}}"/>
    </ws:template>

    <ws:template name="clientTemplate">
        <ws:partial template="serverTemplate" name="serverView" />

        <Controls.List.ItemActions.ItemActionsControl
                ws:content="serverView"
                on:commitActionClick="_commitEditActionHandler()"
                on:cancelActionClick="_cancelEditActionHandler()"
                on:menuActionsClick="_showActionsMenu()"
                on:itemActionsClick="_onItemActionsClick()"
                showToolbar="{{_options.editingConfig.showToolbar}}"
                name="itemActions"
                listModel="{{_listViewModel}}"
                menuIsShown="{{_menuIsShown}}"
                itemActions="{{_options.itemActions}}"
                itemActionVisibilityCallback="{{_options.itemActionVisibilityCallback}}"
                itemActionsPosition="{{_options.itemActionsPosition}}">
        </Controls.List.ItemActions.ItemActionsControl>
        <Controls.List.Swipe.SwipeControl
                ws:content="serverView"
                on:menuActionsClick="_showActionsMenu()"
                on:closeSwipe="_closeSwipe()"
                menuIsShown="{{_menuIsShown}}"
                listModel="{{_listViewModel}}"
                itemActions="{{_options.itemActions}}"
                name="swipeControl">
        </Controls.List.Swipe.SwipeControl>
    </ws:template>

    <ws:if data="{{_listViewModel}}">
        <ws:if data="{{_isServer}}">
            <ws:partial template="serverTemplate"/>
        </ws:if>
        <ws:else>
            <ws:partial template="clientTemplate"/>
        </ws:else>
    </ws:if>

    <ws:if data="{{_options.emptyTemplate && _listViewModel && !_listViewModel.getCount()}}">
        <ws:partial template="{{_options.emptyTemplate}}"/>
    </ws:if>

    <ws:if data="{{_options.footerTemplate}}">
        <ws:partial template="{{_options.footerTemplate}}"/>
    </ws:if>

    <ws:if data="{{_needScrollCalculation}}">
        <div class="controls-BaseControl__trigger controls-BaseControl__bottomLoadTrigger" name="bottomLoadTrigger" style="top: -{{_loadOffset}}px;"></div>
        <div class="controls-BaseControl__bottomPlaceholder" style="height: {{_bottomPlaceholderHeight}}px;"></div>
        <div class="controls-BaseControl__trigger controls-BaseControl__bottomListTrigger" name="bottomListTrigger"></div>
    </ws:if>

    <ws:if data="{{_needScrollCalculation}}">
        <Controls.List.BaseControl.Scroll.Emitter on:emitListScroll="__onEmitScroll()" name="ScrollEmitter"/>
    </ws:if>

    <ws:if data="{{_pagingCfg}}">
       <div class="controls-BaseControl__pagingContainer">
          <Controls.List.Paging attr:class="controls-BaseControl__scrollPaging" scope="{{_pagingCfg}}" on:onArrowClick="__onPagingArrowClick()"></Controls.List.Paging>
       </div>
    </ws:if>
    <ws:if data="{{_loadingIndicatorState}}">
        <div class="controls-BaseControl__loadingIndicator controls-BaseControl__loadingIndicator__state-{{_loadingIndicatorState}}">
            <ws:if data="{{_showLoadingIndicatorImage}}">
                <div class="controls-BaseControl__loadingIndicatorImg"></div>
            </ws:if>
        </div>
    </ws:if>
    <Controls.Dropdown.Opener
            name="itemActionsOpener"
            keyProperty="id"
            menuStyle="cross"
            className="controls-Toolbar__menu-position"
            popupOptions="{{_popupOptions}}" />
</div>
