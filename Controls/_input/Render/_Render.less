.controls-Render {
   contain: style;
   position: relative;
   display: inline-block;
   box-sizing: border-box;
   border-style: solid;
}

.controls-Render_theme-@{themeName} {
   border-width: @border-thickness_inputText;
}

/**
 * https://github.com/philipwalton/flexbugs#flexbug-6
 */
.controls-Render__field {
   flex-shrink: 1;
}

/**
 * In ie11, container sizes are ignored if it can be compressed. Specify explicitly not to compress the container.
 */
.controls-Render__beforeField,
.controls-Render__afterField {
   flex-shrink: 0;
}

.controls-Render_multiline {
   height: auto;
}

.controls-Render__wrapper {
   width: 100%;
   height: 100%;
   max-height: inherit;

   /**
    * Use inline-flex, that would be in ie not to break the baseline in due to overflow inside the container.
    */
   display: inline-flex;
   align-items: baseline;
}

.controls-Render__baseline {
   height: 100%;
   display: flex;
   align-items: center;
}

.controls-Render__placeholder_theme-@{themeName} {
   color: @placeholder-color_inputText;
}

.controls-Render__placeholder_overflow {
   .text-overflow();
}

.controls-Render_theme_@{themeName}_size {
   @variants: s, m, l, default;

   .for(@variants, { &_@{_item}_roundBorder {
      border-radius: ~"@{border-radius_Render_size_@{_item}}";
   } });
}

.controls-Render_theme_@{themeName}_fontStyle {
   @variants: default s, primary s, secondary s, default m, primary m, secondary m, default l, primary l, secondary l, default default, primary default, secondary default;
   .for(@variants, { @fontStyle: extract(@_item, 1); @size: extract(@_item, 2); &_@{fontStyle}_size_@{size} {
      font-weight: ~"@{font-weight_Render_fontStyle_@{fontStyle}_size_@{size}}";
   } });
}

.controls-Render_state-valid_theme-@{themeName} {
   border-color: @border-color_inputText;
   background-color: @background-color_inputText;
}

.controls-Render_state-invalid_theme-@{themeName} {
   border-color: @invalid_border-color_inputText;
   background-color: @invalid_background-color_inputText;
}

.controls-Render_state-readonly_theme-@{themeName} {
   border-color: @readonly_border-color_inputText;
   background-color: @readonly_background-color_inputText;
}

.controls-Render_state-readonly-multiline_theme-@{themeName} {
   border-color: @readonly_border-color_inputArea;
   background-color: @readonly_background-color_inputText;
}

.ws-is-no-touch {
   .controls-Render_state-valid_theme-@{themeName}:hover {
      border-color: @border-color_hover_inputText;
      background-color: @background-color_hover_inputText;
   }
}

.controls-Render_state-valid_theme-@{themeName}:focus-within,
.controls-Render_state-valid-active_theme-@{themeName} {
   border-color: @border-color_focus_inputText;
   background-color: @background-color_focus_inputText;
}

.controls-Render_state-invalid_theme-@{themeName}:focus-within,
.controls-Render_state-invalid-active_theme-@{themeName} {
   border-color: @invalid_focus_border-color_inputText;
   background-color: @invalid_focus_background-color_inputText;
}

.controls-Render__tagStyle_theme-@{themeName} {
   top: 0;
   right: 0;
   cursor: pointer;
   position: absolute;
   width: @tag-size;
   height: @tag-size;
}

.controls-Render__tagStyle_style- {
   @variants: danger, primary, success, secondary, warning;
   .for(@variants, { &@{_item}_theme-@{themeName} {
      fill: ~"@{@{_item}_color}";
   } });
}

.controls-Render__tagStyle_style-info_theme-@{themeName} {
   fill: @unaccented_icon-color;
}

.controls-Render_textAlign {
   @variants: right, left;
   .for(@variants, { &-@{_item} {
      text-align: @_item;
   } });
}
