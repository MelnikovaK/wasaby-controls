<ws:template name="footerTemplateIf">
    <ws:if data="{{_loadingIndicatorState}}">
        <div class="controls-BaseControl__loadingIndicator controls-BaseControl__loadingIndicator__state-{{_loadingIndicatorState}}">
            <ws:if data="{{_showLoadingIndicatorImage}}">
                <div class="controls-BaseControl__loadingIndicatorImg-wrapper">
                    <div class="controls-BaseControl__loadingIndicatorImg"></div>
                </div>
            </ws:if>
        </div>
    </ws:if>
    <ws:if data="{{_options.footerTemplate}}">
        <div class="controls-BaseControl__footer-content">
            <ws:partial template="{{_options.footerTemplate}}"/>
        </div>
    </ws:if>
    <ws:if data="{{_pagingNavigation}}">
        <div class="controls-BaseControl__footerPaging_wrapper">
            <Controls.paging:Paging showDigits = "{{true}}"
                                    pagesCount = "{{_knownPagesCount}}"
                                    selectedPage = "{{_currentPage}}"
                                    on:selectedPageChanged="__pagingChangePage()"
            ></Controls.paging:Paging>

        </div>
    </ws:if>
    <ws:if data="{{_shouldDrawFooter}}">
        <ws:partial template="wml!Controls/_list/BaseControl/Footer" loadMoreCaption="{{_loadMoreCaption}}"/>
    </ws:if>
</ws:template>
<ws:template name="multiSelectTplIf">
    <ws:if data="{{_options.multiSelectVisibility}}">
        <ws:partial template="wml!Controls/_list/BaseControl/multiSelect" scope="{{multiSelectTpl.templateOptions}}" />
    </ws:if>
</ws:template>
<ws:template name="emptyTemplateIf">
    <ws:if data="{{__needShowEmptyTemplate(_options.emptyTemplate, _listViewModel, _loadingState)}}">
        <div class="controls-BaseControl__emptyTemplate">
            <ws:partial template="{{_options.emptyTemplate}}"/>
        </div>
    </ws:if>
</ws:template>
<ws:template name="withDragNDrop">
    <Controls.dragnDrop:Container
        on:dragStart="_dragStart()"
        on:dragEnd="_dragEnd()"
        on:dragLeave="_dragLeave()"
        on:dragEnter="_dragEnter()"
        on:documentDragEnd="_documentDragEnd()"
        draggingTemplate="{{_options.draggingTemplate}}"
        name="dragNDropController"
    >
        <ws:content>
            <ws:partial template="{{viewContent}}" />
        </ws:content>
    </Controls.dragnDrop:Container>
</ws:template>
<ws:template name="viewTpl">
    <ws:partial
        name="{{name}}"
        template="{{ _options.content }}"
        scope="{{_options}}"
        _pagingVisible="{{_pagingVisible}}"
        listModel="{{_listViewModel}}"
        on:animationend="_onAnimationEnd()"
        on:markedKeyChanged="_notifyHandler('markedKeyChanged')"
        on:itemClick="_onItemClick()"
        on:groupClick="_onGroupClick()"
        on:itemContextMenu="_onItemContextMenu()"
        on:itemMouseDown="_itemMouseDown()"
        on:itemMouseEnter="_itemMouseEnter()"
        on:itemMouseMove="_itemMouseMove()"
        on:hoveredItemChanged="_notifyHandler('hoveredItemChanged')"
        on:itemSwipe="_listSwipe()"
    >
        <ws:viewTemplate>
            <ws:partial template="{{_options.viewName}}"
                on:activated="_onActivated()"
                on:deactivated="_onDeactivated()"/>
        </ws:viewTemplate>
        <ws:footerTemplate>
            <ws:partial template="footerTemplateIf"/>
        </ws:footerTemplate>
        <ws:multiSelectTpl>
            <ws:partial template="multiSelectTplIf"/>
        </ws:multiSelectTpl>
        <ws:emptyTemplate>
            <ws:partial template="emptyTemplateIf"/>
        </ws:emptyTemplate>
    </ws:partial>
</ws:template>
<ws:template name="fullView">
    <ws:if data="{{_options.itemsDragNDrop}}">
        <ws:partial template="withDragNDrop">
            <ws:viewContent>
                <ws:partial template="viewTpl"  name="{{name}}" on:controlResize="_viewResize()"/>
            </ws:viewContent>
        </ws:partial>
    </ws:if>
    <ws:else>
        <ws:partial template="viewTpl" name="{{name}}" on:controlResize="_viewResize()"/>
    </ws:else>
</ws:template>

<Controls.dataSource:error.Container
    name="errorContainer"
    viewConfig="{{ __error }}"
    on:keyDown="_onViewKeyDown()"
>
    <div class="controls-BaseControl" on:sortingChanged="_sortingChanged()">
        <div name="fakeFocusElem" tabindex="0" class="controls-BaseControl__fakeFocusElem"></div>
        <ws:if data="{{_needScrollCalculation}}">
            <div class="controls-BaseControl__trigger controls-BaseControl__loadTrigger controls-BaseControl__topLoadTrigger" name="topLoadTrigger" style="bottom: -{{ _loadOffset * 1.5 }}px;"></div>
            <div class="controls-BaseControl__topPlaceholder controls-BaseControl__trigger controls-BaseControl__virtualScrollTrigger controls-BaseControl__topVirtualScrollTrigger" name="topVirtualScrollTrigger" style="bottom: -{{_loadOffset}}px; height: {{_topPlaceholderHeight}}px;"></div>
        </ws:if>

        <ws:if data="{{_listViewModel}}">
            <ws:partial template="fullView" name="listView"/>

            <Controls._list.EditInPlace
                ws:content="listView"
                name="editInPlace"
                editingConfig="{{_options.editingConfig}}"
                on:beforeBeginEdit="_notifyHandler('beforeBeginEdit')"
                on:afterBeginEdit="_onAfterBeginEdit()"
                on:beforeEndEdit="_notifyHandler('beforeEndEdit')"
                on:afterEndEdit="_notifyHandler('afterEndEdit')"
                listModel="{{_listViewModel}}"
                multiSelectVisibility="{{_options.multiSelectVisibility}}"
                errorController="{{ __errorController }}"
                source="{{_sourceController}}"/>
            <Controls._list.ItemActions.ItemActionsControl
                ws:content="listView"
                on:commitActionClick="_commitEditActionHandler()"
                on:cancelActionClick="_cancelEditActionHandler()"
                on:menuActionsClick="_showActionsMenu()"
                on:menuActionClick="_showActionMenu()"
                on:actionClick="_notifyHandler('actionClick')"
                toolbarVisibility="{{_options.editingConfig.toolbarVisibility}}"
                name="itemActions"
                style="{{_options.style}}"
                listModel="{{_listViewModel}}"
                canUpdateItemsActions="{{_canUpdateItemsActions}}"
                menuIsShown="{{_menuIsShown}}"
                actionMenuIsShown="{{_actionMenuIsShown}}"
                itemActions="{{_options.itemActions}}"
                itemActionVisibilityCallback="{{_options.itemActionVisibilityCallback}}"
                itemActionsProperty="{{_options.itemActionsProperty}}"
                itemActionsPosition="{{_options.itemActionsPosition}}"/>
            <Controls._list.Swipe.SwipeControl
            ws:content="listView"
            on:menuActionsClick="_showActionsMenu()"
            on:closeSwipe="_closeSwipe()"
            actionAlignment="{{_options.actionAlignment}}"
            actionCaptionPosition="{{_options.actionCaptionPosition}}"
            viewName="{{ _options.viewName }}"
            listModel="{{_listViewModel}}"
            itemActions="{{_options.itemActions}}"
            name="swipeControl"/>
        </ws:if>

        <ws:if data="{{_needScrollCalculation}}">
            <div class="controls-BaseControl__bottomPlaceholder controls-BaseControl__trigger controls-BaseControl__virtualScrollTrigger controls-BaseControl__bottomVirtualScrollTrigger" name="bottomVirtualScrollTrigger" style="top: -{{_loadOffset}}px;height: {{_bottomPlaceholderHeight}}px;"></div>
            <div class="controls-BaseControl__trigger controls-BaseControl__loadTrigger controls-BaseControl__bottomLoadTrigger" name="bottomLoadTrigger" style="top: -{{ _loadOffset * 1.5 }}px;"></div>
        </ws:if>

        <ws:if data="{{_needScrollCalculation}}">
            <Controls._list.BaseControl.Scroll.Emitter on:emitListScroll="__onEmitScroll()" name="ScrollEmitter"/>
        </ws:if>

        <ws:if data="{{_pagingVisible}}">
            <div class="controls-BaseControl_paging-Padding">
            </div>
            <div class="controls-BaseControl__pagingContainer">
                <Controls.paging:Paging attr:class="controls-BaseControl__scrollPaging" scope="{{_pagingCfg}}" on:onArrowClick="__onPagingArrowClick()"></Controls.paging:Paging>
            </div>
        </ws:if>
        <Controls.dropdown:Opener
            name="itemActionsOpener"
            keyProperty="id"
            menuStyle="cross"/>
        <ws:if data="{{ _items && _needSelectionController }}">
            <!--TODO: нельзя сюда добавлять Container.Async, т.к. события перестают стрелять. Ошибка на эту тему: https://online.sbis.ru/opendoc.html?guid=e3ad3d85-8cfc-4dc4-84dd-84b08db05e26-->
            <Controls._list.BaseControl.SelectionController
                name="selectionController"
                keyProperty="{{ _options.keyProperty }}"
                parentProperty="{{ _options.parentProperty }}"
                items="{{ _items }}"
                nodeProperty="{{ _options.nodeProperty }}"
                selectedKeys="{{ _options.selectedKeys }}"
                excludedKeys="{{ _options.excludedKeys }}"
                listModel="{{ _listViewModel }}"
                on:selectedKeysChanged="_notifyHandler('selectedKeysChanged')"
                on:excludedKeysChanged="_notifyHandler('excludedKeysChanged')"
            />
        </ws:if>
    </div>
</Controls.dataSource:error.Container>
