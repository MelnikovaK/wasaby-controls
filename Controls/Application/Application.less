/* сброс стилей. copy normilize.less*/
* {
   margin: 0;
   padding: 0;
   outline: none;
}

html {
   min-width: 100%;
   min-height: 100%;
   -webkit-tap-highlight-color: rgba(0,0,0,0);
   -webkit-print-color-adjust: exact;

   //В мобильных браузерах для удобства чтения бразуер увеличивает размер шрифта, необходимо это блокировать
   text-size-adjust: none;
   -webkit-text-size-adjust: 100%;
   -moz-text-size-adjust: none;
   -ms-text-size-adjust: 100%;
}

body {
   font-family: @font-family_text_default;
   font-size: @font-size_App__body;
   color: @color_text_default;
   text-decoration-skip-ink: none;

   /* Better Font Rendering =========== */
   -webkit-font-smoothing: antialiased;
   -moz-osx-font-smoothing: grayscale;
}

table {
   border-spacing: 0;
}

img {
   border: none;
}

// На iPad, в сафари и хроме, в пустой textarea, курсор встает на 3px правее, чем нужно,
// и при наличии в поле плейсхолдера (кастомного или нативного) он оказывается по центру его первого символа
// Поэтому для пустого поля добавляем text-indent: -3px
// https://stackoverflow.com/questions/6890149/remove-3-pixels-in-ios-webkit-textarea
// :empty не получается использовать, т.к. он работает только если area пуста/не пуста изначально. Динамически не меняется
// На всех area у нас есть атрибут required (для показа placeholder), соответственно можем использовать :invalid для проверки на пустоту
.ws-is-mobile-safari, .ws-is-mobile-chrome-ios {
   textarea:invalid {
      text-indent: -3px;
   }
}

//Скрытие иконки автозаполнения в полях ввода в браузере Safari на MacOS
input::-webkit-contacts-auto-fill-button {
   visibility: hidden;
   display: none !important;
   pointer-events: none;
   position: absolute;
   right: 0;
}

button::-moz-focus-inner,
input[type="button"]::-moz-focus-inner,
input[type="submit"]::-moz-focus-inner,
input[type="reset"]::-moz-focus-inner {
   padding: 0 !important;
   border: 0 none !important;
}

/*core-min::  styles*/

.ws-hidden {
   display: none !important;
}
.ws-invisible {
   visibility: hidden !important;
}

.ws-absolute {
   position:absolute !important;
}

.ws-fixed {
   position: fixed;
}

.ws-ellipsis {
   overflow: hidden;
   text-overflow: ellipsis;
   white-space: nowrap;
}

.ws-component {
   & > option, & > options, & > opt, & > opts {
      display: none;
   }
}

component {
   display: block;
   position: static;

   & > option, & > options, & > opt, & > opts {
      display: none;
   }
}

.ws-standartLink .asLink {
   text-decoration: underline !important;
}

.ws-Label{
   >.ws-Label-content {
      display: inline-block;
   }

   &.ws-Label-ws-control {
      vertical-align: top;
      > .ws-Label-title {
         position: relative;
         top: 3px;
         vertical-align: top;
      }
   }
   &.ws-Label-titleTop {
      > .ws-Label-title {
         display: block;
         top: 0;
         padding-bottom: 3px;
      }
   }

   &.ws-Label-titleLeft {
      > .ws-Label-title {
         margin-right: 8px;
      }
   }

   &.ws-Label-titleRight {
      > .ws-Label-title {
         margin-left: 8px;
      }
   }

   > .ws-Label-title{
      font-size: @font-size_App__body;
      font-family: @font-family_text_default;
      color: #999999;
      font-style: normal;
      font-weight: normal;

      > .ws-Label-icon {
         vertical-align: sub;
      }
   }
}
.clearfix {
   display: inline-block;
   &:after {
      content: "";
      display: block;
      height: 0;
      line-height: 0;
      clear: both;
      visibility: hidden;
   }
}

html>body .clearfix {
   display: block;
}


.pre-load {
   pointer-events: none;
}
.theme-changing {
   //transition: opacity .25s ease-in-out;
   //-moz-transition: opacity .25s ease-in-out;
   //-webkit-transition: opacity .25s ease-in-out;
   opacity: 0.2;
   pointer-events: none;
}
.zIndex-context {
   z-index: 1;
   position: relative;
}
#theme-changing-overlay {
   width: 100%;
   height: 100%;
   position: absolute;
   top: 0;
   left: 0;
   transition: background-color .25s ease-in-out;
   -moz-transition: background-color .25s ease-in-out;
   -webkit-transition: background-color .25s ease-in-out;
   background-color: rgb(255, 255, 255); /* Black background with opacity */
   z-index: 2; /* Specify a stack order in case you're using a different order for other elements */
   cursor: pointer; /* Add a pointer on hover */
}

/*import basic style to application.less*/
@import "Controls-theme/themes/default/fonts/TensorFont";
@import "Controls-theme/themes/default/fonts/cbus-icons";

@import "Controls-theme/themes/default/helpers/AreaBlocks";
@import "Controls-theme/themes/default/helpers/_header";
@import "Controls-theme/themes/default/helpers/_mixins";
@import "Controls-theme/themes/default/helpers/_misc";

@import "Controls-theme/themes/default/helpers/_flex";
@import "Controls-theme/themes/default/helpers/_typography";

//icons compatibility with new params
//тут определяю только размеры иконок. Делаю это через новые алиасы, чтоб работала темизация. Вообще от этих иконок избавлюсь по проекту
//иконки на старых страницах будут работать чеоез стили определенные в теме, в oldIcons.less
.icon-small, .icon-16  {
   .icon-size(@size_icon_s, @font-family_icon_size-s);
}
.icon-medium, .icon-24  {
   .icon-size(@size_icon_m, @font-family_icon_size-m);
}
.icon-large, .icon-32 {
   .icon-size(@size_icon_l, @font-family_icon_size-l);
}
/* ATTENTION styles */
.icon-attention
{
   color: @color_warning;
}

/* DONE styles */
.icon-done
{
   color: @color_success;
}

/* ERROR styles */
.icon-error
{
   color: @color_danger;
}

/* PRIMARY styles */
.icon-primary
{
   color: @color_secondary;
   fill: @color_secondary;
}

/* DISABLED styles */
.icon-disabled
{
   color: @color_readOnly;
   fill: @color_readOnly;
}
.icon-hover{
   color: @color_primaryV;
}
/* Для тех, кто поддерживает... */
.icon-small, .icon-medium, .icon-large, .icon-size, .icon-16, .icon-24, .icon-32, .icon-default {
   speak: none;
   font-style: normal;
   font-weight: normal;
   font-variant: normal;
   text-transform: none;
   line-height: 1;
   display: inline-block;
}
