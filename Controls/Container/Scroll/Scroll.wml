<ws:template name="content">
   <Controls.Container.Scroll.Watcher scope="{{_options}}" name="scrollWatcher">
      <Controls.Event.Registrator name="scrollDetect" register="scroll">
         <Controls.Event.Registrator name="stickyHeaderShadow" register="updateStickyShadow">
            <Controls.Event.Registrator name="stickyHeaderHeight" register="updateStickyHeight">
               <!--Реализация области блоков требует наличия следующей структуры ws-BlockLayout > ws-BlockGroup.
               Добавляем класс ws-BlockGroup, для того чтобы была облюдена структура если использовать ws-BlockLayout на контейнере.
               Таким образом мы избавляемся от лишней вложенности.
               https://wi.sbis.ru/doc/platform/developmentapl/interface-development/ready-solutions/blocks/-->
               <span name="content"
                    style="{{_displayState.heightFix ? '' : _contentStyles}}"
                    class="controls-Scroll__content ws-BlockGroup
                           {{_useNativeScrollbar && _options.scrollbarVisible ? '' : 'controls-Scroll__content_hideNativeScrollbar'}}
                           {{_displayState.hasScroll ? 'controls-Scroll__content_possibleScroll'}}
                           {{_useNativeScrollbar ? 'controls-Scroll__content_auto' : _displayState.heightFix || _contentStyles === undefined ? 'controls-Scroll__content_hidden' : 'controls-Scroll__content_scroll'}}
                           {{_overflowScrolling ? 'controls-Scroll__content-overflowScrolling'}}"
                    on:controlResize="_resizeHandler()"
                    on:scroll="_scrollHandler()">
                  <ws:partial template="{{_options.content}}"
                              scope="{{_options}}"
                              attr:class="controls-Scroll__userContent"
                              on:fixed="_fixedHandler()"
                              on:stickyRegister="_stickyRegisterHandler()"
                              on:selectedKeysChanged="selectedKeysChanged()"
                              on:excludedKeysChanged="excludedKeysChanged()"
                              on:checkboxClick="_tmplNotify('checkboxClick')"
                              on:itemActionsClick="_tmplNotify('itemActionsClick')"/>
               </span>
            </Controls.Event.Registrator>
         </Controls.Event.Registrator>
      </Controls.Event.Registrator>
   </Controls.Container.Scroll.Watcher>
</ws:template>

<ws:template name="scrollTpl">
   <div class="controls-Scroll ws-flexbox ws-flex-column">
      <ws:if data="{{_pagingState.visible}}">
         <ws:partial template="content"
                     attr:class="controls-Scroll__content_paging"
                     on:scrollMove="_scrollMoveHandler()"/>
      </ws:if>
      <ws:else>
         <ws:partial template="content"/>
      </ws:else>

      <ws:if data="{{_scrollbarVisibility()}}">
         <Controls.Container.Scroll.Scrollbar
            position="{{_scrollTop}}"
            contentHeight="{{_displayState.contentHeight}}"
            attr:class="controls-Scroll__scrollbar {{!_dragging ? 'controls-Scroll__scrollbar_hidden'}}"
            on:positionChanged="_positionChangedHandler()"
            on:draggingChanged="_draggingChangedHandler()"/>
      </ws:if>
      <ws:if data="{{_options.shadowVisible && _displayState.hasScroll}}">
         <div class="controls-Scroll__shadow controls-Scroll__shadow_top {{!_shadowVisible('top') ? ' ws-invisible'}}"></div>
         <div class="controls-Scroll__shadow controls-Scroll__shadow_bottom {{!_shadowVisible('bottom') ? ' ws-invisible'}}"></div>
      </ws:if>

      <ws:if data="{{_pagingState.visible}}">
         <Controls.List.Paging class="controls-Scroll__paging"
                               stateBegin="{{_pagingState.stateUp}}"
                               statePrev="{{_pagingState.stateUp}}"
                               stateEnd="{{_pagingState.stateDown}}"
                               stateNext="{{_pagingState.stateDown}}"
                               on:onArrowClick="_arrowClickHandler()"/>
      </ws:if>

      <Controls.Event.Listener event="controlResize" on:controlResize="_resizeHandler()"/>
   </div>
</ws:template>

<ws:if data="{{_useNativeScrollbar}}">
   <ws:partial template="scrollTpl"/>
</ws:if>
<ws:else>
   <ws:partial template="scrollTpl"
               on:mouseenter="_mouseenterHandler()"
               on:mouseleave="_mouseleaveHandler()"
               on:scrollbarTaken="_scrollbarTakenHandler()"
               on:scrollbarReleased="_scrollbarReleasedHandler()"/>
</ws:else>
