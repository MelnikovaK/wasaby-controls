.controls-DoubleSwitch__toggle {
   .inline-flexbox();
   .align-items(center);
   .justify-content(center);
   .baseline-fix();
   border-width: @width_Switch__border;
   border-color:@color_Switch__border;
   border-radius: @size_Switch__border-radius;
   border-style: solid;
   box-sizing: border-box;
   user-select: none;
}

.controls-DoubleSwitch__line_vertical_checked {
   bottom: @spacing-between-track-and-toggleCircle;
}

.controls-DoubleSwitch__line_vertical_notChecked {
   top: @spacing-between-track-and-toggleCircle;
}

.controls-DoubleSwitch__line_horizontal_notChecked {
   left: @spacing-between-track-and-toggleCircle;
}

.controls-DoubleSwitch__line_horizontal_checked {
   right: @spacing-between-track-and-toggleCircle;
}

.controls-DoubleSwitch__toggle_enabled {
   cursor: pointer;
}

.controls-DoubleSwitch__toggle_horizontal {
   margin: 0 @spacing_Switch-between-toggle-text;
   width: @width_Switch;
   height: @height_Switch;
}

.controls-DoubleSwitch__toggle_vertical {
   width: @height_Switch;
   height: @width_Switch;
   .flex-direction(column);
   margin: 0;
   &:before {
      height: 0;
      line-height: @line-height_DoubleSwitch__vertical;
   }
}

.controls-DoubleSwitch__toggle_horizontal_checked {
   .flex-direction(row-reverse);
}

.controls-DoubleSwitch__textBlock {
   .inline-flexbox();
   .flex-direction(column);
   margin-left: @spacing_Switch-between-toggle-text;
}

.controls-DoubleSwitch__line_horizontal {
   height: @thickness_Switch-track;
   width: @length_Switch-track - @width_ToggleCircle + @spacing-between-track-and-toggleCircle;
   position: relative;
}

.controls-DoubleSwitch__line_vertical {
   height: @length_Switch-track - @height_ToggleCircle + @spacing-between-track-and-toggleCircle;
   width: @thickness_Switch-track;
   position: relative;
}

.controls-DoubleSwitch__line_vertical_checked {
   //Нельзя делать через column-reverse, т.к. иначе базовая линия начинает браться не с того элемента и всё едет
   order: 2;
}

.controls-DoubleSwitch__line_enabled {
   background-color: @background-color_Switch-track__enabled;
   display: inline-block;
}

.controls-DoubleSwitch__line_disabled {
   background-color: @background-color_Switch-track__disabled;
   display: inline-block;
}

.controls-DoubleSwitch__text_vertical {
   display: block;
   //If border is in height text block base line between text and toggle circle deviates to switch border height.
   //In vertical state width = height, height = width.
   height: @width_Switch / 2 - @width_Switch__border;
   line-height: @width_Switch / 2;
}

.controls-DoubleSwitch__text_enabled_unselected {
   color: @color_Switch-text__enabled_unselected;
   cursor: pointer;
}

.controls-DoubleSwitch__text_disabled_unselected {
   color: @color_Switch-text__disabled_unselected;
}

.controls-DoubleSwitch__text_enabled_selected {
   color: @color_DoubleSwitch-text_enabled_selected;
   cursor: pointer;
}

.controls-DoubleSwitch__text_disabled_selected {
   color: @color_DoubleSwitch-text_disabled_selected;
}

.ws-is-no-touch {
   .controls-DoubleSwitch__text_enabled_unselected:hover {
      text-decoration: underline;
   }

   // CSS cascade is needed because you can move mouse to any place of toggle, and internal part of it must be highlighted.
   // Two hover class because first hover class set in js.
   .controls-DoubleSwitcher__toggle_hover, .controls-DoubleSwitch__toggle:hover {
      .controls-SwitchCircle__borderCircle_enabled {
         stroke: @color_ToggleCircle_outerCircle__enabled_hovered;
      }
   }
}

//touch on switcher
.controls-DoubleSwitch:active {
   .controls-SwitchCircle__borderCircle_enabled {
      stroke: @color_ToggleCircle_outerCircle__enabled_hovered;
   }
}
