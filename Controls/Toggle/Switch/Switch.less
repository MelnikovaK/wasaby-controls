//@import (reference) "Switcher";
@crossing-line-btn: @switcherline-width - @switcher-btn-size;
@switcher-do-text-selected-cursor:              text;
.controls-SwitcherDouble__toggle {
   &:extend(.controls-Switcher);
   &:not(:hover) {
      &:extend(.controls-Switcher:not(:hover));
   }
}
.ws-enabled.controls-SwitcherDouble .controls-SwitcherDouble__toggle {
   &:hover {
      &:extend(.ws-enabled.controls-Switcher:hover);
   }
   &.controls-SwitcherDouble-on-toggled, &.controls-SwitcherDouble-off-toggled {
      .controls-SwitcherDouble__btn {
         &:extend(.ws-enabled.controls-Switcher.controls-Checked__checked .controls-Switcher__btn);
         &:before {
            &:extend(.ws-enabled.controls-Switcher.controls-Checked__checked .controls-Switcher__btn:before);
         }
      }
   }
   &.controls-SwitcherDouble-on-toggled .controls-SwitcherDouble__line {
      &:extend(.ws-enabled.controls-Switcher.controls-Checked__checked .controls-Switcher__line);
   }
   &.controls-SwitcherDouble-off-toggled .controls-SwitcherDouble__line {
      &:extend(.ws-enabled.controls-Switcher:not(.controls-Checked__checked) .controls-Switcher__line);
   }
}
.ws-disabled.controls-SwitcherDouble .controls-SwitcherDouble__toggle {
   &:hover {
      &:extend(.ws-disabled.controls-Switcher:hover);
   }
   .controls-SwitcherDouble__btn {
      &:extend(.ws-disabled.controls-Switcher .controls-Switcher__btn);
      &:before {
         &:extend(.ws-disabled.controls-Switcher.controls-Checked__checked .controls-Switcher__btn:before);
      }
   }
   &.controls-SwitcherDouble-on-toggled .controls-SwitcherDouble__line {
      &:extend(.ws-disabled.controls-Switcher.controls-Checked__checked .controls-Switcher__line);
   }
   &.controls-SwitcherDouble-off-toggled .controls-SwitcherDouble__line {
      &:extend(.ws-disabled.controls-Switcher:not(.controls-Checked__checked) .controls-Switcher__line);
   }
}
body:not(.ws-is-mobile-platform) .ws-enabled.controls-SwitcherDouble .controls-SwitcherDouble__toggle:hover {
   &:extend(body:not(.ws-is-mobile-platform) .ws-enabled.controls-Switcher:hover);
   .controls-SwitcherDouble__btn {
      &:extend(body:not(.ws-is-mobile-platform) .ws-enabled.controls-Switcher:hover .controls-Switcher__btn);
   }
   &.controls-SwitcherDouble-on-toggled, &.controls-SwitcherDouble-off-toggled {
      .controls-SwitcherDouble__btn:before {
         &:extend(body:not(.ws-is-mobile-platform) .ws-enabled.controls-Switcher:hover.controls-Checked__checked .controls-Switcher__btn:before);
      }
   }
}
.controls-SwitcherDouble__btn {
   &:extend(.controls-Switcher__btn);
}
.controls-SwitcherDouble__line {
   &:extend(.controls-Switcher__line);
}
.controls-SwitcherDouble-on-toggled, .controls-SwitcherDouble-off-toggled {
   .controls-SwitcherDouble__btn:before {
      &:extend(.controls-Switcher.controls-Checked__checked .controls-Switcher__btn:before);
   }
}

.controls-SwitcherDouble_vertical {
   position: relative;
   height: @switcher-width;
   & > .controls-SwitcherDouble__toggle {
      @offset: (@switcher-width - @switcher-height) / 2;
      vertical-align: top;
      .rotate(-90deg);
      margin: @offset -@offset @offset calc(~"-@{offset} - 1px");
   }
   & > .controls-SwitcherDouble__textBlock {
      display: inline-block;
      margin-left: @switcher-do-text-margin;
      & > .controls-SwitcherDouble__textOn, & > .controls-SwitcherDouble__textOff {
         display: block;
         margin: 0;
      }
      & > .controls-SwitcherDouble__textOff {
         float: left;
      }
      & > .controls-SwitcherDouble__text {
         height: @switcher-width / 2;
         line-height: @switcher-width / 2;
      }
   }
}

.controls-SwitcherDouble__empty {
   font-size: 1px;
}

.switcherDoubleBorder(@border) {
   &.controls-SwitcherDouble-on-toggled .controls-SwitcherDouble__btn {
      .get-size(right, @switcher-width, -@switcherline-width, @border);
   }
   &.controls-SwitcherDouble-off-toggled .controls-SwitcherDouble__btn {
      .get-size(left, @switcher-width, -@switcherline-width, @border);
   }
   & .controls-SwitcherDouble__line {
      .get-size(top, @switcher-height, -@switcherline-height, @border);
      .get-size(left, @switcher-width, -@switcherline-width, @border);
   }
   & .controls-SwitcherDouble__btn {
      .get-size(top, @switcher-height, -@switcher-btn-size, @border);
   }
}

& when (@switcher-hover-border-width = @default-border-width) {
   .controls-SwitcherDouble .controls-SwitcherDouble__toggle {
      border-width: @default-border-width;
      .switcherDoubleBorder(@default-border-width);
   }
}
& when not (@switcher-hover-border-width = @default-border-width) {
   .controls-SwitcherDouble .controls-SwitcherDouble__toggle {
      &:not(:hover), .ws-disabled&:hover {
         border-width: @default-border-width;
         .switcherDoubleBorder(@default-border-width);
      }
      .ws-enabled&:hover {
         border-width: @switcher-hover-border-width;
         .switcherDoubleBorder(@switcher-hover-border-width);
      }
   }
}
.controls-SwitcherDouble {
   display: inline-block;
}

.controls-SwitcherDouble__text {
   display: inline-block;
   height: @switcher-height;
   line-height: @switcher-height;
   .ws-enabled.controls-SwitcherDouble & {
      &.controls-SwitcherDouble__unselected {
         cursor: @default-hover-cursor;
      }
      &:not(controls-SwitcherDouble__unselected) {
         cursor: @switcher-do-text-selected-cursor;
      }
   }
}

.controls-SwitcherDouble__textOn {
   margin-left: @switcher-do-text-margin;
}
.controls-SwitcherDouble__textOff {
   margin-right: @switcher-do-text-margin;
}
.ws-enabled.controls-SwitcherDouble .controls-SwitcherDouble__unselected {
   color: @switcher-do-unselected-text-color;
   &:hover {
      text-decoration: underline;
   }
}

.ws-disabled.controls-SwitcherDouble .controls-SwitcherDouble__text {
   color: @disabled-color;
   cursor: @switcher-do-text-selected-cursor;
}

.get-size(@prop, @var1, @var2, @border) {
      @{prop}: calc(~"(@{var1} + @{var2}) / 2 - @{border}");
}

.switcherBorder(@border) {
   &.controls-Checked__checked .controls-Switcher__btn {
      .get-size(right, @switcher-width, -@switcherline-width, @border);
   }
   &:not(.controls-Checked__checked) .controls-Switcher__btn {
      .get-size(left, @switcher-width, -@switcherline-width, @border);
   }
   & .controls-Switcher__line {
      .get-size(top, @switcher-height, -@switcherline-height, @border);
      .get-size(left, @switcher-width, -@switcherline-width, @border);
   }
   & .controls-Switcher__btn {
      .get-size(top, @switcher-height, -@switcher-btn-size, @border);
   }
}

.controls-Switcher {
   position: relative;
   display: inline-block;
   width: @switcher-width;
   height: @switcher-height;
   border-color: @switcher-border-color;
   border-style: solid;
   border-radius: @switcher-border-radius;
   .box-sizing();
   &.controls-Checked__checked .controls-Switcher__btn:before {
      content: '';
      position: absolute;
      width: @switcher-dot-size;
      height: @switcher-dot-size;
      margin: (@switcher-btn-size - @switcher-dot-size) / 2 - @switcher-btn-border-width;
      .border-radius(100%);
   }
}

.controls-Switcher__line {
   position: absolute;
   height: @switcherline-height;
   width: @switcherline-width;
}

.controls-Switcher__line_disabled-checked() {
   .horizontal-gradient(@switcher-disabled-color @crossing-line-btn, transparent @crossing-line-btn);
}

.controls-Switcher__line_disabled-unchecked() {
   .horizontal-gradient(transparent @switcher-btn-size, @switcher-disabled-color @switcher-btn-size);
}

.controls-Switcher__line_enabled-checked() {
   .horizontal-gradient(@innacent-color2 @crossing-line-btn, transparent @crossing-line-btn);
}

.controls-Switcher__line_enabled-unchecked() {
   .horizontal-gradient(transparent @switcher-btn-size, @innacent-color2 @switcher-btn-size);
}

.controls-Switcher__btn {
   display: block;
   position: absolute;
   width: @switcher-btn-size;
   height: @switcher-btn-size;
   border-style: solid;
   border-width: @switcher-btn-border-width;
   .border-radius(100%);
   .box-sizing();
}

body:not(.ws-is-mobile-platform) .ws-enabled.controls-Switcher:hover {
   cursor: @default-hover-cursor;
   .controls-Switcher__btn {
      border-color: @primary-color;
      border-width: @switcher-btn-hover-border-width;
   }
   &.controls-Checked__checked .controls-Switcher__btn:before when not (@switcher-btn-border-width = @switcher-btn-hover-border-width) {
      @dot-offset: @switcher-btn-border-width - @switcher-btn-hover-border-width;
      top: @dot-offset;
      left: @dot-offset;
   }
}

.ws-enabled.controls-Switcher {
   &.controls-Checked__checked .controls-Switcher__btn {
      border-color: @primary-color;
      &:before {
         background: @primary-color;
      }
   }
   &.controls-Checked__checked .controls-Switcher__line {
      .controls-Switcher__line_enabled-checked();
   }
   &:not(.controls-Checked__checked) .controls-Switcher__line {
      .controls-Switcher__line_enabled-unchecked();
   }
   &:not(.controls-Checked__checked) .controls-Switcher__btn {
      border-color: @innacent-color2;
   }
}

.ws-disabled.controls-Switcher {
   &:hover {
      cursor: @disabled-hover-cursor;
   }
   &.controls-Checked__checked .controls-Switcher__btn:before {
      background: @switcher-disabled-color;
   }
   &.controls-Checked__checked .controls-Switcher__line {
      .controls-Switcher__line_disabled-checked();
   }
   &:not(.controls-Checked__checked) .controls-Switcher__line {
      .controls-Switcher__line_disabled-unchecked();
   }
   .controls-Switcher__btn {
      border-color: @switcher-disabled-color;
   }
}

& when (@switcher-hover-border-width = @default-border-width) {
   .controls-Switcher {
      border-width: @default-border-width;
      line-height: calc(~"@{switcher-height} - 2 * @{default-border-width}");
      .switcherBorder(@default-border-width);
   }
}

& when not (@switcher-hover-border-width = @default-border-width) {
   .controls-Switcher {
      &:not(:hover), .ws-disabled&:hover {
         border-width: @default-border-width;
         line-height: calc(~"@{switcher-height} - 2 * @{default-border-width}");
         .switcherBorder(@default-border-width);
      }
      .ws-enabled&:hover {
         border-width: @switcher-hover-border-width;
         line-height: calc(~"@{switcher-height} - 2 * @{switcher-hover-border-width}");
         .switcherBorder(@switcher-hover-border-width);
      }
   }
}