<div class="controls-BreadCrumbsPath{{_options.header ? ' controls-BreadCrumbsPath__twoRows' : ''}}">
    <div class="controls-BreadCrumbsPath__wrapper">
        <ws:if data="{{ _backButtonCaption && !_options.header }}">
            <Controls._crumbs.HeadingPath.Back backButtonCaption="{{_backButtonCaption}}"
                                               backButtonClass="{{_backButtonClass}}"
                                               counterCaption="{{ _getCounterCaption(_options.items) }}"
                                               showArrowOutsideOfBackButton="{{!_breadCrumbsItems && !_options.rootVisible}}"
                                               backButtonStyle="{{ _options.backButtonStyle }}"
                                               showActionButton="{{_options.showActionButton}}"
                                               on:backButtonClick="_onBackButtonClick()"
                                               on:arrowClick="_onArrowClick()"/>
        </ws:if>
        <ws:if data="{{_visibleItems || _options.rootVisible}}">
            <div class="controls-BreadCrumbsPath__homeContainer {{!_backButtonCaption ? 'controls-BreadCrumbsPath__homeContainer_withoutBackButton'}} {{ _applyHighlighter(_options.highlighter, _options.items ? _options.items[0].get(_options.parentProperty) : _options.root) }}"
                 on:mouseEnter="_notifyHandler('hoveredItemChanged', _getRootModel(_options.items ? _options.items[0].get(_options.parentProperty) : _options.root, _options.keyProperty))"
                 on:mouseLeave="_notifyHandler('hoveredItemChanged')"
                 on:click="_onHomeClick()">
                <div class="controls-BreadCrumbsPath__home icon-Home3"></div>
            </div>
        </ws:if>
        <ws:if data="{{_visibleItems}}">
            <Controls._crumbs.View attr:class="controls-BreadCrumbsPath__breadCrumbs {{_breadCrumbsClass}}"
                                       items="{{_breadCrumbsItems}}"
                                       visibleItems="{{_visibleItems}}"
                                       keyProperty="{{_options.keyProperty}}"
                                       displayProperty="{{_options.displayProperty}}"
                                       highlighter="{{_options.highlighter}}"
                                       on:hoveredItemChanged="_notifyHandler('hoveredItemChanged')"
                                       on:itemClick="_notifyHandler('itemClick')"/>
        </ws:if>

        <Controls.Event.Listener event="controlResize"
                                on:controlResize="_onResize()"/>
    </div>
</div>
