<ws:template name="cellPartialTemplate">
   <ws:if data="{{itemData.multiSelectVisibility !== 'hidden' && currentColumn.columnIndex === 1 || itemData.multiSelectVisibility === 'hidden' && currentColumn.columnIndex === 0}}">
      <ws:if data="{{!withoutLevelPadding && itemData.level > 1}}">
         <ws:for data="i in itemData.level - 1">
            <div class="controls-TreeGrid__row-levelPadding controls-TreeGrid__row-levelPadding_size_{{levelIndentSize ? levelIndentSize : 'default'}} controls-TreeGrid__row-expanderPadding_size_{{expanderSize ? expanderSize : 'default'}}"></div>
         </ws:for>
      </ws:if>
      <ws:if data="{{itemData.shouldDrawExpander(itemData, expanderIcon)}}">
         <ws:partial template="{{itemData.expanderTemplate}}" itemData="{{itemData}}" expanderIcon="{{expanderIcon}}" expanderSize="{{expanderSize}}"/>
      </ws:if>
      <ws:else data="{{itemData.shouldDrawExpanderPadding(itemData, expanderIcon, expanderSize)}}">
         <div class="controls-TreeGrid__row-expanderPadding js-controls-ListView__notEditable"></div>
      </ws:else>
   </ws:if>
   <ws:partial template="{{currentColumn.template}}"
               attr:class="{{currentColumn.column.align ? ' controls-Grid__row-cell__content_halign_' + currentColumn.column.align : ''}}{{itemData.isRightSwiped ? ' controls-ListView__item_rightSwipeAnimation'}}"
               ladderWrapper="{{currentColumn.ladderWrapper}}"
               itemData="{{currentColumn}}" />
   <ws:if data="{{itemData.isDrawActions(itemData, currentColumn, colspan)}}">
      <ws:if data="{{itemData.isSwiped}}">
         <ws:partial template="{{swipeTemplate}}" itemData="{{itemData}}" itemActionsTemplate="{{itemActionsTemplate}}"/>
      </ws:if>
      <ws:else >
         <ws:partial template="{{itemActionsTemplate}}" itemActionsClass="{{itemActionsClass}}" itemData="{{itemData}}"/>
      </ws:else>
   </ws:if>
</ws:template>
<ws:template name="columnContent">
<ws:if data="{{itemData.multiSelectVisibility !== 'hidden' && currentColumn.columnIndex === 0}}">
   <ws:partial template="{{multiSelectTpl}}"
               attr:class="controls-GridView__checkbox
                  {{(itemData.multiSelectVisibility === 'onhover' && itemData.multiSelectStatus === undefined)? 'controls-GridView__checkbox-onhover'}}">
      <ws:templateOptions triState="{{itemData.item[itemData.nodeProperty] !== null}}"
                          multiSelectStatus="{{itemData.multiSelectStatus}}"
                          key="{{itemData.key}}" />
   </ws:partial>
</ws:if>
<ws:else>
   <ws:if data="{{colspan}}">
      <ws:partial template="{{colspanTemplate}}" itemData="{{itemData}}"/>
   </ws:if>
   <ws:else>
      <ws:if data="{{itemData.isNotFullGridSupport}}">
         <div class="controls-Grid__row-cell__contentWrapper"><ws:partial template="cellPartialTemplate"/></div>
      </ws:if>
      <ws:else>
         <ws:partial template="cellPartialTemplate"/>
      </ws:else>
   </ws:else>
</ws:else>
</ws:template>
<ws:template name="columnContentWrapper">
<ws:if data="{{marker !== false && itemData.markerVisibility !== 'hidden' && itemData.isSelected && currentColumn.columnIndex === 0}}">
   <div attr:class="controls-ListView__itemV_marker"></div>
</ws:if>
<div if="{{!!itemData.dragTargetNode}}" class="controls-TreeGridView__dragTargetNode {{currentColumn.columnIndex === 0 ? 'controls-TreeGridView__dragTargetNode_first'}}
                              {{currentColumn.columnIndex === itemData.getLastColumnIndex() ? 'controls-TreeGridView__dragTargetNode_last'}}"></div>
<ws:partial template="columnContent" attr:class="{{currentColumn.hiddenForLadder ? 'controls-Grid__row-cell__content_hiddenForLadder'}}"/>
</ws:template>
<ws:template name="colTpl">
<div attr:class="{{currentColumn.cellClasses}}
                    {{!!itemData.isActive ? ' controls-GridView__item_active'}}
                             {{!!itemData.isDragging ? ' controls-ListView__item_dragging'}}
                             {{!!itemData.dragTargetNode ? ' js-controls-TreeView__dragTargetNode'}}
                             controls-TreeGrid__row js-controls-SwipeControl__actionsContainer"
     attr:style="{{itemData.getCellStyle(itemData, currentColumn, colspan || colspanCurrentNode, itemData.isNotFullGridSupport)}}">
   <ws:partial template="columnContentWrapper"/>
</div>
</ws:template>
<ws:template name="stickyCell">
<Controls.StickyHeader position="topbottom"
                       attr:class="{{currentColumn.cellClasses}}
                             {{!!itemData.isDragging ? ' controls-ListView__item_dragging'}}
                             {{!!itemData.dragTargetNode ? ' js-controls-TreeView__dragTargetNode'}}
                             controls-TreeGrid__row js-controls-SwipeControl__actionsContainer"
                       attr:style="{{itemData.getCellStyle(itemData, currentColumn, colspan || colspanCurrentNode, itemData.isNotFullGridSupport)}}">
   <ws:partial template="columnContentWrapper"/>
</Controls.StickyHeader>
</ws:template>
<ws:template name="oldColTpl">
<td attr:class="{{currentColumn.cellClasses}}
                   {{!!itemData.isActive ? ' controls-GridView__item_active'}}
                            {{!!itemData.isDragging ? ' controls-ListView__item_dragging'}}
                            {{!!itemData.dragTargetNode ? ' js-controls-TreeView__dragTargetNode'}}
                            {{(marker !== false && itemData.markerVisibility !== 'hidden' && itemData.isSelected && itemData.columnIndex === 0)?' controls-Grid__row-cell_selected__first'}}
                            controls-TreeGrid__row js-controls-SwipeControl__actionsContainer"
    attr:style="{{itemData.getCellStyle(itemData, currentColumn, colspan || colspanCurrentNode, itemData.isNotFullGridSupport)}}">
   <ws:partial template="columnContent" attr:class="{{currentColumn.hiddenForLadder ? 'controls-Grid__row-cell__content_hiddenForLadder'}}"/>
   <div if="{{!!itemData.dragTargetNode}}" class="controls-TreeGridView__dragTargetNode {{itemData.columnIndex === 0 ? 'controls-TreeGridView__dragTargetNode_first'}}
                        {{itemData.columnIndex === itemData.getLastColumnIndex() ? 'controls-TreeGridView__dragTargetNode_last'}}"></div>
</td>
</ws:template>
<ws:if data="{{itemData.isNotFullGridSupport}}">
<tr attr:class="controls-Grid__row controls-ListView__itemV {{highlightOnHover !== false ? 'controls-Grid__row_highlightOnHover_' + (itemData.style || 'default')}} controls-Grid__row_{{itemData.style || 'default'}}">
   <ws:if data="{{colspanNodes && itemData.dispItem.isNode()}}">
      {{itemData.resetColumnIndex();}}
      <ws:if data="{{itemData.multiSelectVisibility !== 'hidden'}}">
         <ws:partial template="oldColTpl" currentColumn="{{itemData.getCurrentColumn()}}"/>
         {{itemData.goToNextColumn();}}
      </ws:if>
      <ws:partial template="oldColTpl" currentColumn="{{itemData.getCurrentColumn()}}" colspanCurrentNode="{{true}}"/>
   </ws:if>
   <ws:else>
      <ws:for data="itemData.resetColumnIndex(); itemData.getLastColumnIndex()>=itemData.columnIndex && (!colspan || itemData.columnIndex<2); itemData.goToNextColumn();">
         <ws:partial template="oldColTpl" currentColumn="{{itemData.getCurrentColumn()}}"/>
      </ws:for>
   </ws:else>
</tr>
</ws:if>
<ws:else>
<ws:if data="{{itemData.styleLadderHeading}}">
   <div attr:class="controls-Grid__row-ladder-cell {{itemData.getItemColumnCellClasses(itemData)}}{{!!itemData.isActive ? ' controls-GridView__item_active'}}{{!!itemData.isDragging ? ' controls-ListView__item_dragging'}} js-controls-SwipeControl__actionsContainer"
        attr:style="{{itemData.styleLadderHeading}}">
      <ws:partial template="columnContent" currentColumn="{{itemData.getCurrentColumn()}}" attr:class="controls-Grid__row-ladder-cell__content"/>
   </div>
</ws:if>
<ws:if data="{{itemData.isSticky}}">
   <Controls.StickyHeader.Group>
      <div class="controls-Grid__row controls-ListView__itemV {{highlightOnHover !== false ? 'controls-Grid__row_highlightOnHover_' + (itemData.style || 'default')}} controls-Grid__row_{{itemData.style || 'default'}}">
         <!-- The iterator does not restart when the model changes. Instead, the internal partial is redrawn. We do a reboot forcibly. -->
         <!-- Delete after the task is done https://online.sbis.ru/opendoc.html?guid=13786a2a-54c7-4a09-8fbc-11344cf0804d -->
         <ws:if data="{{colspanNodes && itemData.dispItem.isNode()}}">
            {{itemData.resetColumnIndex();}}
            <ws:if data="{{itemData.multiSelectVisibility !== 'hidden'}}">
               <ws:partial template="stickyCell" currentColumn="{{itemData.getCurrentColumn()}}"/>
               {{itemData.goToNextColumn();}}
            </ws:if>
            <ws:partial template="stickyCell" currentColumn="{{itemData.getCurrentColumn()}}" colspanCurrentNode="{{true}}"/>
         </ws:if>
         <ws:else>
            <ws:for data="itemData.resetColumnIndex(); itemData.getLastColumnIndex()>=itemData.columnIndex && (!colspan || itemData.columnIndex<2); itemData.goToNextColumn();">
               <ws:partial template="stickyCell" currentColumn="{{itemData.getCurrentColumn()}}"/>
            </ws:for>
         </ws:else>
      </div>
   </Controls.StickyHeader.Group>
</ws:if>
<ws:else>
   <div attr:class="controls-Grid__row controls-ListView__itemV {{highlightOnHover !== false ? 'controls-Grid__row_highlightOnHover_' + (itemData.style || 'default')}} controls-Grid__row_{{itemData.style || 'default'}}">
      <ws:if data="{{colspanNodes && itemData.dispItem.isNode()}}">
         {{itemData.resetColumnIndex();}}
         <ws:if data="{{itemData.multiSelectVisibility !== 'hidden'}}">
            <ws:partial template="colTpl" currentColumn="{{itemData.getCurrentColumn()}}"/>
            {{itemData.goToNextColumn();}}
         </ws:if>
         <ws:partial template="colTpl" currentColumn="{{itemData.getCurrentColumn()}}" colspanCurrentNode="{{true}}"/>
      </ws:if>
      <ws:else>
         <ws:for data="itemData.resetColumnIndex(); itemData.getLastColumnIndex()>=itemData.columnIndex && (!colspan || itemData.columnIndex<2); itemData.goToNextColumn();">
            <ws:partial template="colTpl" currentColumn="{{itemData.getCurrentColumn()}}"/>
         </ws:for>
      </ws:else>
   </div>
</ws:else>
</ws:else>
