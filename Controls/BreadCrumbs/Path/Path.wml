<div class="controls-BreadCrumbsPath">
    <div class="controls-BreadCrumbsPath__wrapper">
        <ws:if data="{{_backButtonCaption}}">
            <div class="controls-BreadCrumbsPath__backButton__wrapper {{_backButtonClass}}">
                <Controls.Heading.Back attr:class="controls-BreadCrumbsPath__backButton"
                                       caption="{{_backButtonCaption}}"
                                       style="secondary"
                                       on:click="_onBackButtonClick()"/>
                <div class="controls-BreadCrumbsPath__backButtonArrow icon-View icon-primary{{_breadCrumbsItems ? '' : ' controls-BreadCrumbsPath__backButtonArrow_outsideBackButton'}}"
                     on:click="_onArrowClick()"></div>
            </div>
        </ws:if>
        <ws:if data="{{_visibleItems || _options.showHome}}">
            <div class="controls-BreadCrumbsPath__homeContainer {{ _options.styledItemKey === _options.root ? 'controls-BreadCrumbsView__dropTarget'}}"
                         on:mouseEnter="_notifyHandler('hoveredItemChanged', _options.root)"
                         on:mouseLeave="_notifyHandler('hoveredItemChanged')"
                         on:click="_onHomeClick()">
                <div class="controls-BreadCrumbsPath__home icon-Home3 icon-primary"></div>
            </div>
        </ws:if>
        <ws:if data="{{_visibleItems}}">
            <Controls.BreadCrumbs.View attr:class="controls-BreadCrumbsPath__breadCrumbs {{_breadCrumbsClass}}"
                                       items="{{_breadCrumbsItems}}"
                                       visibleItems="{{_visibleItems}}"
                                       keyProperty="{{_options.keyProperty}}"
                                       displayProperty="{{_options.displayProperty}}"
                                       styledItemKey="{{_options.styledItemKey}}"
                                       on:hoveredItemChanged="_notifyHandler('hoveredItemChanged')"
                                       on:itemClick="_notifyHandler('itemClick')"/>
        </ws:if>

        <Controls.Event.Listener event="controlResize"
                                on:controlResize="_onResize()"/>
    </div>
</div>
