<div class="controls-Explorer">
   <ws:if data="{{_breadCrumbsItems}}">
      <Controls.BreadCrumbs.Path name="explorerPath"
                                 keyProperty="{{_options.keyProperty}}"
                                 parentProperty="{{ _options.parentProperty }}"
                                 displayProperty="{{_options.displayProperty}}"
                                 items="{{_breadCrumbsItems}}"
                                 on:arrowActivated="_onBreadCrumbsArrowActivated()"
                                 on:itemClick="_onBreadCrumbsClick()" />
   </ws:if>
   <Controls.List.TreeControl root="{{_root}}"
                      scope="{{_options}}"
                      name="treeControl"
                      viewName="{{_viewName}}"
                      swipeViewMode="{{_swipeViewMode}}"
                      viewModelConstructor="{{_viewModelConstructor}}"
                      leftPadding="{{_leftPadding}}"
                      itemTemplate="{{_viewMode==='tile' ? _options.tileItemTemplate : _options.itemTemplate}}"
                      on:itemClick="_onItemClick()"
                      on:checkboxClick="_notifyHandler('checkboxClick')"
                      on:beforeBeginEdit="_notifyHandler('beforeBeginEdit')"
                      on:afterBeginEdit="_notifyHandler('afterBeginEdit')"
                      on:beforeEndEdit="_notifyHandler('beforeEndEdit')"
                      on:afterEndEdit="_notifyHandler('afterEndEdit')"
                      on:itemActionsClick="_notifyHandler('itemActionsClick')"
                      on:dragStart="_notifyHandler('dragStart')"
                      on:dragEnd="_notifyHandler('dragEnd')"
                      on:markedKeyChanged="_notifyHandler('markedKeyChanged')"
                      on:selectedKeysChanged="_notifyHandler('selectedKeysChanged')"
                      on:excludedKeysChanged="_notifyHandler('excludedKeysChanged')"
                      on:selectedKeysCountChanged="_notifyHandler('selectedKeysCountChanged')"
                      dataLoadCallback="{{_dataLoadCallback}}"/>
</div>