<div class="controls-Explorer">
   <Controls.DragNDrop.Controller on:documentDragStart="_documentDragStart()" on:dragEnd="_dragEndBreadCrumbs()" on:documentDragEnd="_documentDragEnd()">
      <ws:if data="{{_breadCrumbsItems || _dragOnBreadCrumbs}}">
         <Controls.BreadCrumbs.Path name="explorerPath"
                                    keyProperty="{{_options.keyProperty}}"
                                    parentProperty="{{ _options.parentProperty }}"
                                    displayProperty="{{_options.displayProperty}}"
                                    items="{{_breadCrumbsItems}}"
                                    root="{{_options.root}}"
                                    rootVisible="{{_dragOnBreadCrumbs}}"
                                    highlighter="{{[_breadCrumbsDragHighlighter]}}"
                                    arrowVisibility="{{ _options.showActionButton }}"
                                    on:hoveredItemChanged="_hoveredCrumbChanged()"
                                    on:arrowActivated="_notifyHandler('arrowActivated')"
                                    on:itemClick="_onBreadCrumbsClick()" />
      </ws:if>
      <ws:else>
         <div></div>
      </ws:else>
   </Controls.DragNDrop.Controller>
   <Controls.List.TreeControl root="{{_root}}"
                      scope="{{_options}}"
                      name="treeControl"
                      viewName="{{_viewName}}"
                      swipeViewMode="{{_swipeViewMode}}"
                      viewModelConstructor="{{_viewModelConstructor}}"
                      leftPadding="{{_leftPadding}}"
                      itemTemplate="{{_viewMode==='tile' ? _options.tileItemTemplate : _options.itemTemplate}}"
                      on:itemClick="_onItemClick()"
                      on:checkboxClick="_notifyHandler('checkboxClick')"
                      on:beforeBeginEdit="_notifyHandler('beforeBeginEdit')"
                      on:afterBeginEdit="_notifyHandler('afterBeginEdit')"
                      on:beforeEndEdit="_notifyHandler('beforeEndEdit')"
                      on:afterEndEdit="_notifyHandler('afterEndEdit')"
                      on:itemActionsClick="_notifyHandler('itemActionsClick')"
                      on:dragStart="_notifyHandler('dragStart')"
                      on:dragEnd="_notifyHandler('dragEnd')"
                      on:changeDragTarget="_notifyHandler('changeDragTarget')"
                      on:dragEnter="_notifyHandler('dragEnter')"
                      on:markedKeyChanged="_notifyHandler('markedKeyChanged')"
                      on:selectedKeysChanged="_notifyHandler('selectedKeysChanged')"
                      on:excludedKeysChanged="_notifyHandler('excludedKeysChanged')"
                      on:keyDown="_onExplorerKeyDown()"
                      itemsReadyCallback="{{_itemsReadyCallback}}"
                      dataLoadCallback="{{_dataLoadCallback}}"/>
</div>