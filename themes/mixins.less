.text-overflow() {
  overflow: hidden;
  text-overflow: ellipsis;
  -ms-text-overflow: ellipsis;
  white-space: nowrap;
}

.user-select(@select: none) {
  -webkit-touch-callout: @select;
  -webkit-user-select: @select;
  -khtml-user-select: @select;
  -moz-user-select: @select;
  -ms-user-select: @select;
  user-select: @select;
}
.icon-16() {
  font-size: 16px !important;
  line-height: 16px !important;
  width: 16px;
  height: 16px;
  font-family: 'cbuc-icons' !important;
}

.icon-24() {
  font-size: 24px !important;
  line-height: 24px !important;
  width: 24px;
  height: 24px;
  font-family: 'cbuc-icons24' !important;
}

.icon-32() {
  font-size: 32px !important;
  line-height: 32px !important;
  width: 32px;
  height: 32px;
  font-family: 'cbuc-icons' !important;
}

.closedHandCursor() {
   cursor: -moz-grabbing !important;
   cursor: -webkit-grabbing !important;
   cursor: grabbing !important;
}

.placeholder() {
  &::-webkit-input-placeholder {
    color: @text-box-placeholder-color;
  }

  &:-moz-placeholder {
     color: darken(@text-box-placeholder-color, 17%);
  }

  &::-moz-placeholder {
     color: darken(@text-box-placeholder-color, 17%);
  }

  &:-ms-input-placeholder {
     color: @text-box-placeholder-color;
  }
}

.box-sizing(@type: border-box) {
  -webkit-box-sizing: @type;
  -moz-box-sizing: @type;
  box-sizing: @type;
}

.box-shadow(@string) {
  -webkit-box-shadow: @string;
  -moz-box-shadow: @string;
  box-shadow: @string;
}

.border-radius(@radius: 5px) {
  -webkit-border-radius: @radius;
  -moz-border-radius: @radius;
  border-radius: @radius;
  -webkit-background-clip: padding-box;
  -moz-background-clip: padding;
  background-clip: padding-box;
}

.border-radiuses(@topright: 0, @bottomright: 0, @bottomleft: 0, @topleft: 0) {
  -webkit-border-top-right-radius: @topright;
  -webkit-border-bottom-right-radius: @bottomright;
  -webkit-border-bottom-left-radius: @bottomleft;
  -webkit-border-top-left-radius: @topleft;

  -moz-border-radius-topright: @topright;
  -moz-border-radius-bottomright: @bottomright;
  -moz-border-radius-bottomleft: @bottomleft;
  -moz-border-radius-topleft: @topleft;

  border-top-right-radius: @topright;
  border-bottom-right-radius: @bottomright;
  border-bottom-left-radius: @bottomleft;
  border-top-left-radius: @topleft;
  -webkit-background-clip: padding-box;
  -moz-background-clip: padding;
  background-clip: padding-box;
}

.opacity(@opacity: 0.5) {
  -webkit-opacity: @opacity;
  -moz-opacity: @opacity;
  opacity: @opacity;
}

.gradient(@startColor: #eee, @endColor: white) {
  background-color: @startColor;
  background: -webkit-gradient(linear, left top, left bottom, from(@startColor), to(@endColor));
  background: -webkit-linear-gradient(top, @startColor, @endColor);
  background: -moz-linear-gradient(top, @startColor, @endColor);
  background: -ms-linear-gradient(top, @startColor, @endColor);
  background: -o-linear-gradient(top, @startColor, @endColor);
}

.horizontal-gradient(@startColor: #eee, @endColor: white) {
  background-color: @startColor;
  background-image: -webkit-gradient(linear, left top, right top, from(@startColor), to(@endColor));
  background-image: -webkit-linear-gradient(left, @startColor, @endColor);
  background-image: -moz-linear-gradient(left, @startColor, @endColor);
  background-image: -ms-linear-gradient(left, @startColor, @endColor);
  background-image: -o-linear-gradient(left, @startColor, @endColor);
}

.animation(@name, @duration: 300ms, @delay: 0, @ease: ease) {
  -webkit-animation: @name @duration @delay @ease;
  -moz-animation: @name @duration @delay @ease;
  -ms-animation: @name @duration @delay @ease;
}

.transition(@transition) {
  -webkit-transition: @transition;
  -moz-transition: @transition;
  -ms-transition: @transition;
  -o-transition: @transition;
}

.transform(@string){
  -webkit-transform: @string;
  -moz-transform: @string;
  -ms-transform: @string;
  -o-transform: @string;
  transform: @string;
}

.scale(@factor) {
  -webkit-transform: scale(@factor);
  -moz-transform: scale(@factor);
  -ms-transform: scale(@factor);
  -o-transform: scale(@factor);
}

.rotate(@deg) {
  -webkit-transform: rotate(@deg);
  -moz-transform: rotate(@deg);
  -ms-transform: rotate(@deg);
  -o-transform: rotate(@deg);
}

.skew(@deg, @deg2) {
  -webkit-transform: skew(@deg, @deg2);
  -moz-transform: skew(@deg, @deg2);
  -ms-transform: skew(@deg, @deg2);
  -o-transform: skew(@deg, @deg2);
}

.translate(@x, @y:0) {
  -webkit-transform: translate(@x, @y);
  -moz-transform: translate(@x, @y);
  -ms-transform: translate(@x, @y);
  -o-transform: translate(@x, @y);
}

.translate3d(@x, @y: 0, @z: 0) {
  -webkit-transform: translate3d(@x, @y, @z);
  -moz-transform: translate3d(@x, @y, @z);
  -ms-transform: translate3d(@x, @y, @z);
  -o-transform: translate3d(@x, @y, @z);
}

.perspective(@value: 1000) {
  -webkit-perspective: @value;
  -moz-perspective: @value;
  -ms-perspective: @value;
  perspective: @value;
}

.transform-origin(@x:center, @y:center) {
  -webkit-transform-origin: @x @y;
  -moz-transform-origin: @x @y;
  -ms-transform-origin: @x @y;
  -o-transform-origin: @x @y;
}
.vertical-center-mixin(@padding-top, @height){
   position: absolute;
   top: 50%;
   margin-top: -(@height / 2 - @padding-top);
}

.marker(@position: left top, @image: 'img/rowSelect.png') {
  background-image: url(@image);
  background-position: @position;
  background-repeat: repeat-y;
}

.inline-flexbox() {
  display: inline-flex;
  display: -ms-inline-flexbox;
  display: -webkit-inline-flex;
}

.flexbox() {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}
//Решаем проблему лишних отступов между inline-block элементами лежащими друг за другом.
//ВАЖНО: Если не задано значение @child-font-size то у всех дочерних элементов блока, с данным стилем, должен быть указан собственный font-size.
.inline-block-bug-fix(@child-font-size: 0) {
  font-size: 0;

  & when (@child-font-size > 0) {
    & > * {
      font-size: @child-font-size;
    }
  }
}

.ws-header-mixin(@padding-left, @padding-right, @font, @color) {
  display: inline-block;
  padding-left: @padding-left;
  padding-right: @padding-right;
  font: @font;
  color: @color;
}

.ws-header-content-mixin(@content, @font, @color) {
  content: @content;
  font: @font;
  color: @color;
}
.link-hover-mixin(@textColor, @iconColor, @textSelector) {
  &:not(.ws-disabled):not(.controls-Click__active):not(.controls-Link__disabledHover) {
    &:hover {
      color: @textColor;
      .controls-Link__icon {
        &.icon-primary {
          color: @iconColor !important;
        }
      }
    }
  }
  &:not(.ws-disabled):not(.controls-Click__active) {
    &:hover .@{textSelector} {
      cursor: pointer;
      text-decoration: underline;
    }
  }
}