#!/bin/sh
# Run unit testing via browser

paths=(Controls File components)

node -v
npm install

for item in ${paths[*]}
do
    mkdir -p ara/${item}
    cp -rf ${item}/* ara/${item}/
done

node node_modules/nyc/bin/nyc instrument ara goga

for item in ${paths[*]}
do
    mv ${item} ${item}-origin
    mv goga/${item} ${item}
    cp -nR ${item}-origin/* ${item}
done
rm -rf ara/
rm -rf goga/

node depencyCollector
node node_modules/ws-unit-testing/queue test-server test-browser-coverage

for item in ${paths[*]}
do
    rm -rf ${item}
    mv ${item}-origin ${item}
done

node coverageUnusedFiles

mkdir -p artifacts/{all,controls,file,components}
mv artifacts/coverageAll.json artifacts/all/coverage.json
mv artifacts/coverageControls.json artifacts/controls/coverage.json
mv artifacts/coverageFile.json artifacts/file/coverage.json
mv artifacts/coverageComponents.json artifacts/components/coverage.json

node node_modules/nyc/bin/nyc report --reporter=cobertura --report-dir=cobertura --temp-directory=artifacts/all
node node_modules/nyc/bin/nyc report --reporter=html --report-dir=coverage-report --temp-directory=artifacts/all
node node_modules/nyc/bin/nyc report --reporter=html --report-dir=coverage-controls-report --temp-directory=artifacts/controls
node node_modules/nyc/bin/nyc report --reporter=html --report-dir=coverage-file-report --temp-directory=artifacts/file
node node_modules/nyc/bin/nyc report --reporter=html --report-dir=coverage-components-report --temp-directory=artifacts/components