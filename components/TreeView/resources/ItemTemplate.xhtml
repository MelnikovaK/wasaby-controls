{{ var
      nodePropertyValue = it.item.get(it.nodeProperty),
      projection = it.projItem.getOwner(),
      children = it.hierarchy.getChildren(
         it.item,
         projection.getCollection()
      ),
      isLoaded = it.projItem.isLoaded(),
      hasLoadedChild = children.length > 0,
      classNodeType = ' controls-ListView__item-type-' + (nodePropertyValue == null ? 'leaf' : nodePropertyValue == true ? 'node' : 'hidden'),
      classNodeState = nodePropertyValue !== null ? (' controls-TreeView__item-' + (it.projItem.isExpanded() ? 'expanded' : 'collapsed')) : '',
      classIsLoaded = isLoaded ? ' controls-ListView__item-loaded' : '',
      classHasLoadedChild = hasLoadedChild ? ' controls-ListView__item-with-child' : ' controls-ListView__item-without-child',
      classIsSelected = (it.selectedKey==it.item.getId()) ? ' controls-ListView__item__selected' : '',
      addClasses = 'js-controls-ListView__item controls-ListView__item js-controls-TreeView__item controls-TreeView__item' + classNodeType + classNodeState + classIsLoaded + classHasLoadedChild + classIsSelected;}}
<div class="{{=addClasses}}" data-parent-hash="{{=it.projItem.getParent().getHash()}}" data-hash="{{=it.projItem.getHash()}}" data-id="{{=it.item.getId()}}">
   {{?!it.isSearch}}{{for (var i = 0; i < it.projItem.getLevel() - 1; i++ ){ }}<div class="controls-TreeView__levelPadding">&nbsp;</div>{{ } }}<div class="controls-TreeView__expand js-controls-TreeView__expand {{?it.projItem.isExpanded()}} controls-TreeView__expand__open{{?}}"></div>{{?? !it.projItem.isNode() && it.projItem.getLevel() > 1}}<div class="controls-TreeView__levelPadding">&nbsp;</div>{{?}}
   {{=it.itemContent(it)}}
</div>