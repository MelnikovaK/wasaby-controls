@heightProgressBar: @controls-ProgressBar-height - 2 * @default-border-width;
@align-text: left, center, right;

.controls-ProgressBar-align-progress-generator(@index: 1) when (@index <= length(@align-text)) {
  @value: extract(@align-text, @index);
  .controls-ProgressBar_align-@{value} {
    .controls-ProgressBar__progress {
      text-align: @value;
    }
  }
  .controls-ProgressBar-align-progress-generator(@index: @index + 1);
}

.controls-ClockPickerBody-position-tick-generator(@index: 0, @indexCircle, @circle, @offset: @offset) when (@index < @countTickInCircle) {
  .controls-ClockPickerBody__tick_@{circle}-@{index} {
    @x: extract(@radiusCircle, @indexCircle) * (1 + cos(@offset)) - extract(@radiusTick, @indexCircle);
    @y: extract(@radiusCircle, @indexCircle) * (1 - sin(@offset)) - extract(@radiusTick, @indexCircle);
    transform: translate(round(@x, 1), round(@y, 1));
  }
  .controls-ClockPickerBody-position-tick-generator(@index: @index + 1, @indexCircle: @indexCircle, @circle: @circle, @offset: @offset + @angularOffset);
}

.controls-ProgressBar__progress_size {
  width: calc(e("100% - 2 * @{default-border-width}"));
  height: @heightProgressBar;
  border: @default-border-width @default-border-style @gray-light-color;
  border-radius: @controls-ProgressBar-border-radius;
  line-height: @heightProgressBar;
}

.controls-ProgressBar__progress_color {
  background-repeat: no-repeat;
  background-color: @gray-f4f4f4-color;
  background-image: @controls-ProgressBar-progress-bg-grad;
}

.controls-ProgressBar__progress_sizeValue {
  font-size: @small-text-size;
}

.controls-ProgressBar__progress_colorValue {
  color: @disabled-color;
}

.controls-ProgressBar-align-progress-generator();