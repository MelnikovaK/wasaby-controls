@heightProgressBar: @controls-ProgressBar-height - 2 * @default-border-width;
@paddingLR: extract(@controls-ProgressBar-value-padding, 2);
@alignText: left, right, center;

.for(@alignText, {
  .controls-ProgressBar_align-@{_item} {
    .controls-ProgressBar__progress {
      text-align: @_item;
    }
  }
});

.controls-ProgressBar when not (ispercentage(@controls-ProgressBar-width)) {
  width: @controls-ProgressBar-width;
}

.controls-ProgressBar__progress_size {
  height: @heightProgressBar;
  border: @default-border-width @default-border-style @controls-ProgressBar-border-color;
  border-radius: @controls-ProgressBar-border-radius;
  line-height: @heightProgressBar;
  padding: @controls-ProgressBar-value-padding;
  font-size: @controls-ProgressBar-value-font-size;
  & when (ispercentage(@controls-ProgressBar-width)) {
    width: calc(~"@{controls-ProgressBar-width} - 2 * (@{default-border-width} + @{paddingLR})");
  }
  & when not (ispercentage(@controls-ProgressBar-width)) {
    width: @controls-ProgressBar-width - 2 * (@default-border-width + @paddingLR);
  }
}

.controls-ProgressBar__progress_color {
  background-repeat: no-repeat;
  background-color: @controls-ProgressBar-background-color;
  background-image: linear-gradient(to right, @controls-ProgressBar-first-color, @controls-ProgressBar-last-color);
}

.controls-ProgressBar__progress_colorValue {
  color: @controls-ProgressBar-value-color;
}