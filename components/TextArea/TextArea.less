/*
   <div class="controls-TextBox controls-TextArea">
      <div class="controls-TextBox__wrapper">
         <textarea class="controls-TextBox__field controls-TextArea__field" />
         <div class="controls-TextArea__view"></div>
      </div>
      <div class="controls-TextBox__informationIcon"></div>
   </div>
 */

.controls-TextArea_padding {
   padding: @padding_TextArea-container;
}

.controls-TextArea__field {
   padding: @padding_TextArea-field; //если отступ справа будет висеть на контейнере, то между скроллом и контейнером будет отступ
   resize: none; //по умолчанию both
   white-space: pre-wrap; //https://bugzilla.mozilla.org/show_bug.cgi?id=1137650
   overflow-x: hidden; //https://bugzilla.mozilla.org/show_bug.cgi?id=33654 https://jsfiddle.net/aowv52p6/
}

.controls-TextArea__view {
   .flex-shrink(0);
   box-sizing: border-box;
   padding: @padding_TextArea-field;
   width: 100%;
   overflow-x: hidden;
   overflow-y: auto;
   white-space: pre-wrap;
   word-wrap: break-word;
   min-height: @min-height_TextArea;
   max-height: 100%;
}

.controls-TextArea__placeholder {
   .compatPlaceholder(@color_InputRender-placeholder);
   .align-items(baseline);
   overflow-y: auto;
   overflow-x: hidden;
   padding: @padding_TextArea-field;
}

.controls-TextArea__placeholder__overflow {
   display: inline-block;
   width: 100%;
   white-space: pre-wrap;
   word-wrap: break-word;
}

.controls-InputRender__field:invalid + .controls-TextArea__placeholder {
   .inline-flexbox();
}

.generate-height(controls-TextArea__field);

/*
   СЛОЙ СОВМЕСТИМОСТИ
 */
.controls-TextArea__field {
   position: absolute;
   top: 0;
   left: 0;
}
.controls-TextArea__view_empty {
   color: @color_InputRender-placeholder; //Т.к. до инициализации textarea скрыта, то плейсхолдер находится в div'e и он должен иметь корректный цвет
   .baseline-fix(); //Пустой блок увеличивает размеры родительского и ломает базовую линию
}
.controls-TextArea__field_init {
   position: static;
}
.controls-TextArea__view_init {
   position: absolute;
   top: 0;
   left: 0;
}
.controls-InputRender.controls-TextArea {
   //При использовании line-height: normal высота строка в FF становится 19px, а в остальных браузерах 18px. Через метрики
   //шрифта это не исправить, т.к. с другими шрифтами высота строки тоже разная. Так что нужно указывать line-height явно
   line-height: @line-height_TextArea;
}