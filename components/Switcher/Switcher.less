@crossing-line-btn: @width_Switcher-line - @size_Switcher-btn;
.get-size(@prop, @var1, @var2, @border) {
      @{prop}: calc(~"(@{var1} + @{var2}) / 2 - @{border}");
}

.switcherBorder(@border) {
   &.controls-Checked__checked .controls-Switcher__btn {
      .get-size(right, @switcher-width, -@width_Switcher-line, @border);
   }
   &:not(.controls-Checked__checked) .controls-Switcher__btn {
      .get-size(left, @switcher-width, -@width_Switcher-line, @border);
   }
   & .controls-Switcher__line {
      .get-size(top, @switcher-height, -@switcherline-height, @border);
      .get-size(left, @switcher-width, -@width_Switcher-line, @border);
   }
   & .controls-Switcher__btn {
      .get-size(top, @switcher-height, -@size_Switcher-btn, @border);
   }
}

.controls-Switcher {
   position: relative;
   display: inline-block;
   width: @width_Switcher;
   height: @height_Switcher;
   border-color: @border-color_Switcher;
   border-style: solid;
   border-radius: @border-radius_Switcher;
   .box-sizing();
   &.controls-Checked__checked .controls-Switcher__btn:before {
      content: '';
      position: absolute;
      width: @size_Switcher-btn-before;
      height: @size_Switcher-btn-before;
      margin: (@size_Switcher-btn - @size_Switcher-btn-before) / 2 - @border-width_Switcher-btn;
      .border-radius(100%);
   }
}

.controls-Switcher__line {
   position: absolute;
   width: @width_Switcher-line;
   height: @height_Switcher-line;
}

.controls-Switcher__line_disabled-checked() {
   .horizontal-gradient(@color_Switcher-line_disabled @crossing-line-btn, transparent @crossing-line-btn);
}

.controls-Switcher__line_disabled-unchecked() {
   .horizontal-gradient(transparent @size_Switcher-btn, @color_Switcher-line_disabled @size_Switcher-btn);
}

.controls-Switcher__line_enabled-checked() {
   .horizontal-gradient(@color_Switcher-line_enabled @crossing-line-btn, transparent @crossing-line-btn);
}

.controls-Switcher__line_enabled-unchecked() {
   .horizontal-gradient(transparent @size_Switcher-btn, @color_Switcher-line_enabled @size_Switcher-btn);
}

.controls-Switcher__btn {
   display: block;
   position: absolute;
   width: @size_Switcher-btn;
   height: @size_Switcher-btn;
   border-style: solid;
   border-width: @border-width_Switcher-btn;
   .border-radius(100%);
   .box-sizing();
}

body:not(.ws-is-mobile-platform) .ws-enabled.controls-Switcher:hover {
   cursor: pointer;
   .controls-Switcher__btn {
      border-color: @border-color_Switcher-btn_enabled_hover;
      border-width: @border-width_Switcher-btn_hover;
   }
   &.controls-Checked__checked .controls-Switcher__btn:before when not (@border-width_Switcher-btn = @border-width_Switcher-btn_hover) {
      @dot-offset: @border-width_Switcher-btn - @border-width_Switcher-btn_hover;
      top: @dot-offset;
      left: @dot-offset;
   }
}

.ws-enabled.controls-Switcher {
   .controls-Switcher__btn {
      border-color: @border-color_Switcher-btn_enabled;
      &:before {
         background: @bg_Switcher-btn_enabled;
      }
   }
   &.controls-Checked__checked .controls-Switcher__line {
      .controls-Switcher__line_enabled-checked();
   }
   &:not(.controls-Checked__checked) .controls-Switcher__line {
      .controls-Switcher__line_enabled-unchecked();
   }
}

.ws-disabled.controls-Switcher {
   &.controls-Checked__checked .controls-Switcher__line {
      .controls-Switcher__line_disabled-checked();
   }
   &:not(.controls-Checked__checked) .controls-Switcher__line {
      .controls-Switcher__line_disabled-unchecked();
   }
   .controls-Switcher__btn {
      border-color: @border-color_Switcher-btn_disabled;
      &:before {
         background: @bg_Switcher-btn_disabled;
      }
   }
}

& when (@border-width_Switcher_hover = @border-width_Switcher) {
   .controls-Switcher {
      border-width: @border-width_Switcher;
      line-height: calc(~"@{height_Switcher} - 2 * @{border-width_Switcher}");
      .switcherBorder(@border-width_Switcher);
   }
}

& when not (@border-width_Switcher_hover = @border-width_Switcher) {
   .controls-Switcher {
      &:not(:hover), .ws-disabled&:hover {
         border-width: @border-width_Switcher;
         line-height: calc(~"@{height_Switcher} - 2 * @{border-width_Switcher}");
         .switcherBorder(@border-width_Switcher);
      }
      .ws-enabled&:hover {
         border-width: @border-width_Switcher_hover;
         line-height: calc(~"@{height_Switcher} - 2 * @{switcher-hover-border-width}");
         .switcherBorder(@border-width_Switcher_hover);
      }
   }
}