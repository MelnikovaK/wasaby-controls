@crossing-line-btn: @switcherline-width - @switcher-btn-size;
.get-size(@prop, @var1, @var2, @border) {
   @{prop}: calc(~"(@{var1} + @{var2}) / 2 - @{border}");
}

.switcherBorder(@border) {
   &.controls-Checked__checked .controls-Switcher__btn {
      .get-size(right, @switcher-width, -@switcherline-width, @border);
   }
   &:not(.controls-Checked__checked) .controls-Switcher__btn {
      .get-size(left, @switcher-width, -@switcherline-width, @border);
   }
   & .controls-Switcher__line {
      .get-size(top, @switcher-height, -@switcherline-height, @border);
      .get-size(left, @switcher-width, -@switcherline-width, @border);
   }
   & .controls-Switcher__btn {
      .get-size(top, @switcher-height, -@switcher-btn-size, @border);
   }
}

.controls-Switcher {
   position: relative;
   display: inline-block;
   width: @switcher-width;
   height: @switcher-height;
   border-color: @switcher-border-color;
   border-style: solid;
   border-radius: @switcher-border-radius;
   .box-sizing();
   &.controls-Checked__checked .controls-Switcher__btn:before {
      content: '';
      position: absolute;
      width: @switcher-dot-size;
      height: @switcher-dot-size;
      margin: (@switcher-btn-size - @switcher-dot-size) / 2 - @switcher-btn-border-width;
      .border-radius(100%);
   }
}

.controls-Switcher__line {
   position: absolute;
   height: @switcherline-height;
   width: @switcherline-width;
}

.controls-Switcher__line_disabled-checked() {
   .horizontal-gradient(@switcher-disabled-color @crossing-line-btn, transparent @crossing-line-btn);
}

.controls-Switcher__line_disabled-unchecked() {
   .horizontal-gradient(transparent @switcher-btn-size, @switcher-disabled-color @switcher-btn-size);
}

.controls-Switcher__line_enabled-checked() {
   .horizontal-gradient(@color_switcher_line @crossing-line-btn, transparent @crossing-line-btn);
}

.controls-Switcher__line_enabled-unchecked() {
   .horizontal-gradient(transparent @switcher-btn-size, @color_switcher_line @switcher-btn-size);
}

.controls-Switcher__btn {
   display: block;
   position: absolute;
   width: @switcher-btn-size;
   height: @switcher-btn-size;
   border-style: solid;
   border-width: @switcher-btn-border-width;
   .border-radius(100%);
   .box-sizing();
}

body:not(.ws-is-mobile-platform) .ws-enabled.controls-Switcher:hover {
   cursor: pointer;
   .controls-Switcher__btn {
      border-color: @primary-color;
      border-width: @switcher-btn-hover-border-width;
   }
   &.controls-Checked__checked .controls-Switcher__btn:before when not (@switcher-btn-border-width = @switcher-btn-hover-border-width) {
      @dot-offset: @switcher-btn-border-width - @switcher-btn-hover-border-width;
      top: @dot-offset;
      left: @dot-offset;
   }
}

.ws-enabled.controls-Switcher {
   &.controls-Checked__checked .controls-Switcher__btn {
      border-color: @primary-color;
      &:before {
         background: @primary-color;
      }
   }
   &.controls-Checked__checked .controls-Switcher__line {
      .controls-Switcher__line_enabled-checked();
   }
   &:not(.controls-Checked__checked) .controls-Switcher__line {
      .controls-Switcher__line_enabled-unchecked();
   }
   &:not(.controls-Checked__checked) .controls-Switcher__btn {
      border-color: @color_switcher_line;
   }
}

.ws-disabled.controls-Switcher {
   &:hover {
      cursor: pointer; //??
   }
   &.controls-Checked__checked .controls-Switcher__btn:before {
      background: @switcher-disabled-color_checked;
   }
   &.controls-Checked__checked .controls-Switcher__line {
      .controls-Switcher__line_disabled-checked();
   }
   &:not(.controls-Checked__checked) .controls-Switcher__line {
      .controls-Switcher__line_disabled-unchecked();
   }
   .controls-Switcher__btn {
      border-color: @switcher-disabled-color;
   }
   &.controls-Checked__checked {
      .controls-Switcher__btn {
         border-color: @switcher-disabled-color_checked;
      }
   }
}

& when (@switcher-hover-border-width = @default-border-width) {
   .controls-Switcher {
      border-width: @default-border-width;
      line-height: calc(~"@{switcher-height} - 2 * @{default-border-width}");
      .switcherBorder(@default-border-width);
   }
}

& when not (@switcher-hover-border-width = @default-border-width) {
   .controls-Switcher {
      &:not(:hover), .ws-disabled&:hover {
         border-width: @default-border-width;
         line-height: calc(~"@{switcher-height} - 2 * @{default-border-width}");
         .switcherBorder(@default-border-width);
      }
      .ws-enabled&:hover {
         border-width: @switcher-hover-border-width;
         line-height: calc(~"@{switcher-height} - 2 * @{switcher-hover-border-width}");
         .switcherBorder(@switcher-hover-border-width);
      }
   }
}