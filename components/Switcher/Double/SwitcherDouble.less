@import (reference) "../Switcher";
.controls-SwitcherDouble__toggle {
   &:extend(.controls-Switcher);
   &:not(:hover) {
      &:extend(.controls-Switcher:not(:hover));
   }
}
.ws-enabled.controls-SwitcherDouble .controls-SwitcherDouble__toggle {
   &:hover {
      &:extend(.ws-enabled.controls-Switcher:hover);
   }
   &.controls-SwitcherDouble-on-toggled, &.controls-SwitcherDouble-off-toggled {
      .controls-SwitcherDouble__btn {
         &:extend(.ws-enabled.controls-Switcher.controls-Checked__checked .controls-Switcher__btn);
         &:before {
            &:extend(.ws-enabled.controls-Switcher.controls-Checked__checked .controls-Switcher__btn:before);
         }
      }
   }
   &.controls-SwitcherDouble-on-toggled .controls-SwitcherDouble__line {
      &:extend(.ws-enabled.controls-Switcher.controls-Checked__checked .controls-Switcher__line);
   }
   &.controls-SwitcherDouble-off-toggled .controls-SwitcherDouble__line {
      &:extend(.ws-enabled.controls-Switcher:not(.controls-Checked__checked) .controls-Switcher__line);
   }
}
.ws-disabled.controls-SwitcherDouble .controls-SwitcherDouble__toggle {
   &:hover {
      &:extend(.ws-disabled.controls-Switcher:hover);
   }
   .controls-SwitcherDouble__btn {
      &:extend(.ws-disabled.controls-Switcher .controls-Switcher__btn);
      &:extend(.ws-disabled.controls-Switcher.controls-Checked__checked .controls-Switcher__btn);
      &:before {
         &:extend(.ws-disabled.controls-Switcher.controls-Checked__checked .controls-Switcher__btn:before);
      }
   }
   &.controls-SwitcherDouble-on-toggled .controls-SwitcherDouble__line {
      &:extend(.ws-disabled.controls-Switcher.controls-Checked__checked .controls-Switcher__line);
   }
   &.controls-SwitcherDouble-off-toggled .controls-SwitcherDouble__line {
      &:extend(.ws-disabled.controls-Switcher:not(.controls-Checked__checked) .controls-Switcher__line);
   }
}
body:not(.ws-is-mobile-platform) .ws-enabled.controls-SwitcherDouble .controls-SwitcherDouble__toggle:hover {
   &:extend(body:not(.ws-is-mobile-platform) .ws-enabled.controls-Switcher:hover);
   .controls-SwitcherDouble__btn {
      &:extend(body:not(.ws-is-mobile-platform) .ws-enabled.controls-Switcher:hover .controls-Switcher__btn);
   }
   &.controls-SwitcherDouble-on-toggled, &.controls-SwitcherDouble-off-toggled {
      .controls-SwitcherDouble__btn:before {
         &:extend(body:not(.ws-is-mobile-platform) .ws-enabled.controls-Switcher:hover.controls-Checked__checked .controls-Switcher__btn:before);
      }
   }
}
.controls-SwitcherDouble__btn {
   &:extend(.controls-Switcher__btn);
}
.controls-SwitcherDouble__line {
   &:extend(.controls-Switcher__line);
}
.controls-SwitcherDouble-on-toggled, .controls-SwitcherDouble-off-toggled {
   .controls-SwitcherDouble__btn:before {
      &:extend(.controls-Switcher.controls-Checked__checked .controls-Switcher__btn:before);
   }
}

.controls-SwitcherDouble_vertical {
   position: relative;
   height: @switcher-width;
   & > .controls-SwitcherDouble__toggle {
      @offset: (@switcher-width - @switcher-height) / 2;
      vertical-align: top;
      .rotate(-90deg);
      margin: @offset -@offset @offset calc(~"-@{offset} - 1px");
   }
   & > .controls-SwitcherDouble__textBlock {
      display: inline-block;
      margin-left: @switcher-do-text-margin;
      & > .controls-SwitcherDouble__textOn, & > .controls-SwitcherDouble__textOff {
         display: block;
         margin: 0;
      }
      & > .controls-SwitcherDouble__textOff {
         float: left;
      }
      & > .controls-SwitcherDouble__text {
         height: @switcher-width / 2;
         line-height: @switcher-width / 2;
      }
   }
}

.controls-SwitcherDouble__empty {
   font-size: 1px;
}

.switcherDoubleBorder(@border) {
   &.controls-SwitcherDouble-on-toggled .controls-SwitcherDouble__btn {
      .get-size(right, @switcher-width, -@switcherline-width, @border);
   }
   &.controls-SwitcherDouble-off-toggled .controls-SwitcherDouble__btn {
      .get-size(left, @switcher-width, -@switcherline-width, @border);
   }
   & .controls-SwitcherDouble__line {
      .get-size(top, @switcher-height, -@switcherline-height, @border);
      .get-size(left, @switcher-width, -@switcherline-width, @border);
   }
   & .controls-SwitcherDouble__btn {
      .get-size(top, @switcher-height, -@switcher-btn-size, @border);
   }
}

& when (@switcher-hover-border-width = @default-border-width) {
   .controls-SwitcherDouble .controls-SwitcherDouble__toggle {
      border-width: @default-border-width;
      .switcherDoubleBorder(@default-border-width);
   }
}
& when not (@switcher-hover-border-width = @default-border-width) {
   .controls-SwitcherDouble .controls-SwitcherDouble__toggle {
      &:not(:hover), .ws-disabled&:hover {
         border-width: @default-border-width;
         .switcherDoubleBorder(@default-border-width);
      }
      .ws-enabled&:hover {
         border-width: @switcher-hover-border-width;
         .switcherDoubleBorder(@switcher-hover-border-width);
      }
   }
}
.controls-SwitcherDouble {
   display: inline-block;
}

.controls-SwitcherDouble__text {
   display: inline-block;
   height: @switcher-height;
   line-height: @switcher-height;
   font-size: @font-size_Switcher_text;
   .ws-enabled.controls-SwitcherDouble & {
      &.controls-SwitcherDouble__unselected {
         cursor: pointer;
      }
      &:not(controls-SwitcherDouble__unselected) {
         cursor: text;
      }
   }
}

.controls-SwitcherDouble__textOn {
   margin-left: @switcher-do-text-margin;
   color: @default-text-color;
}
.controls-SwitcherDouble__textOff {
   margin-right: @switcher-do-text-margin;
   color: @default-text-color;
}
.ws-enabled.controls-SwitcherDouble .controls-SwitcherDouble__unselected {
   color: @switcher-do-unselected-text-color;
   &:hover {
      text-decoration: @text-decoration_switcher_text_unselected_hover;
      color: @color_switcher_text_unselected_hover;
   }
}

.ws-disabled.controls-SwitcherDouble {
   .controls-SwitcherDouble__text {
      color: @color_SwitherDouble_text_disabled;
      cursor: text;
   }
   &.controls-Checked__checked {
      .controls-SwitcherDouble__text {
         color: @color_SwitherDouble_text_disabled_checked;
      }
   }
}

