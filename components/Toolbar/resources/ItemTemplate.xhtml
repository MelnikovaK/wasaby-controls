{{var
    subItems,
    item = it.item,
    options = item.get('options') || {},
    className = item.get('className') || '',
    itemKey = item.get(it.keyField),
    visible = !!(item.get('showType') == it.showType.MENU_TOOLBAR || item.get('showType') == it.showType.TOOLBAR );
    if (visible) {
        subItems = it.getSubItems(itemKey, null, it.items, it.keyField, it.hierField);
        subItems = $ws.core.clone(subItems);
        for (var i = 0; i < subItems.length; i++) {
            if (subItems[i].parent == itemKey ) {
                delete subItems[i].parent;
            }
            if (subItems.length) {
                options.items = subItems;
                options.hierField = it.hierField;
                options.displayField = it.displayField;
            }
        }
    }
}}
<component data-component="{{=item.get('componentType').substr(3)}}" config="{{=$ws.helpers.encodeCfgAttr(options)}}"
           data-hash="{{=it.projItem.getHash()}}"
           data-id="{{=itemKey}}"
           class="controls-ListView__item js-controls-ListView__item controls-ToolBar__item {{=className}}">
    <option name="visible" type="boolean">{{=visible}}</option>
    <option name="keyField">{{=it.keyField}}</option>
    {{?item.get('icon')}}<option name="icon">{{=item.get('icon')}}</option>{{?}}
    {{?item.get('caption')}}<option name="caption">{{=item.get('caption')}}</option>{{?}}
    {{?item.get('command')}}<option name="command">{{=item.get('command')}}</option>{{?}}
</component>