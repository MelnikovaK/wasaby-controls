@import "../Utils/HtmlDecorators/HighlightDecorator";

.controls-ListView__itemCheckBox {
   .checkbox();
   cursor: pointer;
   display: inline-block;
   position: absolute;
   left: @listView-check-box-left;
   top: @listView-check-box-top;

   &:before {
      color: @check-box-icon-box-color;
   }
}

.controls-ListView__item__multiSelected {
   .controls-ListView__itemCheckBox:after {
      color: @primary-color;
   }
}

.controls-ListView__item__partiallySelected {
   .controls-ListView__itemCheckBox:after {
      background-color: @primary-color;
   }
}

.controls-ListView__showCheckBoxes {
   .controls-ListView__itemCheckBox {
      .checkbox-border-size();
   }
}

.controls-ListView__hideCheckBoxes {
   .controls-ListView__itemCheckBox {
      display: none;
   }
}

/*
   fakeFocusElement с left 50% пораждает в safari на mac ошибку https://online.sbis.ru/opendoc.html?guid=16c81a19-f2a0-4b3f-a7e8-56d154b68e4c
   установим left 0, вроде ничего не должно отвалиться.
*/
.controls-ListView__fakeFocusElement {
   body.ws-is-desktop-safari &,
   body.ws-is-sbis-desktop &{
      left: 0;
   }
}

.controls-ListView__multiselect__off {
   .controls-ListView__itemCheckBox {
      display: none;
   }
}

.ws-disabled {
   .controls-ListView__itemCheckBox {
      cursor: default;
   }
}

.controls-ListView__item:hover {
   .controls-ListView__itemCheckBox__showByHover {
      .checkbox-border-size();
   }
}

.controls-ListView__itemCheckBox__showAlways {
   .checkbox-border-size();
}

controls-ListView__item__withHover:hover {
   background-color: @background-color_ListView-item_hovered;
}

.controls-ListView__item__multiSelected:not(.controls-ListView__item__partiallySelected) {
   .controls-ListView__itemCheckBox {
      .checkbox-border-size();
      .checkbox-checked-size();
   }
}
.controls-ListView__item__partiallySelected {
   .controls-ListView__itemCheckBox {
      .checkbox-border-size();
      .checkbox-null-size();
   }
}

.controls-ListView__hoveredItem {
   background-color: @background-color_ListView-item_hovered;
}

.controls-ListView__small__EmptyData {
   padding-bottom: @listView-empty-data-padding-top;
   color: @gray-ccc-color;
}

.controls-ListView__normal__EmptyData {
   color: @listView-empty-data-color;
   .box-sizing(border-box);
   padding-top: @listView-empty-data-padding-top;
   font-size: @listView-empty-data-font-size;
   text-align: center;
}

.controls-ListView__item__selected__withMarker {
   .marker(left top)
}

.controls-ListView-scrollIndicator_outside{
   position: relative;
}
//todo: элементы itemsControlMixin вне listView не должны обрезаться
.controls-ListView {
   .controls-ListView__item {
      overflow: hidden;
      position: relative;
   }
}

.controls-ListView {
    position: relative;
}

//Данные стили обеспечивают правильное поведение ListView при активации.
//Фокус должен переходить на элемент с position fixed.
.controls-ListView__fakeFocusElement {
   position: fixed;
   top: 50%;
   left: 50%;
   width: 1px;
   height: 1px;
}

.controls-ListView__EmptyData{
   color: @listView-empty-data-color;
   .box-sizing(border-box);
   padding-top: @listView-empty-data-padding-top;
   font-size: @listView-empty-data-font-size;
   text-align: center;
   white-space: normal;
}

.controls-Pager-container {
   overflow: hidden;
}
.controls-ListView-scrollIndicator {
   display: none;
   margin: 0 auto;
   height: @list-view-scroll-height;
   bottom: 0;
   position: absolute;
   // ставим z-index выше чем у Операций над записью,
   // чтобы по время подгрузки индикатор их не перекрывал
   z-index: 11;
   right: 0;
   width: 100%;
   background: @list-view-loading-indicator-gradient-bg;
   background-size: @background-size_ListView_ScrollIndicator;
   &.controls-ListView-scrollIndicator__up{
      top: 0;
      background: @list-view-loading-indicator-gradient-bg-up;
   }
}

.controls-ListView__indicatorVisible:not(.ws-sticky-header__table-header-copy) {
    min-height: @list-view-scroll-height;
    > .controls-ListView-scrollIndicator {
      display: block;
   }
}

.controls-ListView__serviceFooter {
   padding: @listView-servicefooter-padding;
   overflow: hidden;
}

.controls-ListView__loadMoreButton {
   height: @listView-servicefooter-height;
   line-height: @listView-servicefooter-height;
   font-size: @listView-loadmorebutton-font-size;
}

.controls-ListView__counter {
   float: right;
   color: @gray-color;
   font-size: @listView-servicefooter-fontsize;
   display: inline-block;
   height: @listView-servicefooter-height;
   line-height: @listView-servicefooter-height;
}

.controls-AjaxLoader {
   background: transparent;
   position: absolute;
   top: 0;
   bottom: 0;
   left:0;
   right: 0;
   width: 100%;
   z-index: 11;
   overflow: hidden;
   //todo: вложенность
   &.controls-AjaxLoader__showIndication {
      background: @controls-AjaxLoader-background;
      min-height: @controls-AjaxLoader-size;
      .controls-AjaxLoader__outer {
         display: block;
      }
   }
   &__outer {
      display: none;
      height: @controls-AjaxLoader-size + 2 * @controls-AjaxLoader-block-padding;
      position: relative;
      top: 50%;
   }
   &__block {
      width: @controls-AjaxLoader-size;
      border: none;
      box-shadow: none;
      background: @controls-AjaxLoader-block-background;
      margin-left: auto;
      margin-right: auto;
      position: relative;
      top: -50%;
      padding: @controls-AjaxLoader-block-padding;
   }
   &__LoadingIndicator{
      position: absolute;
      background:@list-view-scroll-bg;
      background-size: @controls-AjaxLoader-size;
      padding-left:  @controls-AjaxLoader-size;
      height:  @controls-AjaxLoader-size;
   }
}
// На webkit из-за особенностей верстки в данном месте, несмотря на то что у абсолютно спозиционированного
// контенера заданы top и bottom, высота все равно равна 0 а не высоте контенера. Устанавливаем высоту через height: 100%;
.ws-is-webkit .controls-AjaxLoader {
   height: 100%;
}
.controls-ListView__results{
  background: #FFF;
  font-weight: bold;
  font-size: 14px;
  color: #313E78;
}

.controls-ListView__scrollPager {
   position: absolute;
   bottom: @scrollpager-bottom;
   right: 0;
   height: @height_ListView_ScrollPager;
   background: @scrollpager-bg;
   border-top: @scrollpager-border;
   z-index: 10;
}
.controls-ListView__scrollPager_fixed {
   position: fixed;
}
.ws-float-area-animate .controls-ListView__scrollPager {
   display: none;
}
.rightSwipeAnimation {
   -webkit-animation-name: rightSwipe; /* Safari 4.0 - 8.0 */
   -webkit-animation-duration: 0.3s; /* Safari 4.0 - 8.0 */
   animation-name: rightSwipe;
   animation-duration: 0.3s;
}
// при свайпе право одноврменно с анимацией происходил горизонтальный скролл на айпаде,
// из-за этого дергался реестр. перешли с анимации через right, на анимацию через translate
@keyframes rightSwipe {
   0% {
      .translate(0);
   }
   50% {
      .translate(16px);
   }
   100% {
      .translate(0);
   }
}
:not(.ws-sticky-header__header-container) > .controls-ScrollPaging__pagesPadding.controls-ListView__bottomStyle {
   padding-bottom: @scrollPaging-padding + @bottomStyle-padding-bottom;
}
.controls-GroupBy {
   .user-select();
}
.controls-GroupBy__separator {
   height: @height_ListView-GroupBy / 2;
   margin-bottom: @height_ListView-GroupBy / 2;
   border-bottom: @default-border-width solid @color_ListView-GroupBy_separator;
}
.controls-GroupBy__separator__center {
   text-align: center;
}
.controls-GroupBy__separator__right {
   text-align: right;
}
.controls-GroupBy__separatorText {
   line-height: @height_ListView-GroupBy;
   display: inline-block;
   padding: @padding_ListView-GroupBy_separator;
   background: @default-bg-color;
   color: @color_ListView-GroupBy_text;
   font-size: @font-size_ListView-GroupBy_text;
   white-space: nowrap;
}
.controls-GroupBy__separatorText.controls-GroupBy__separatorCollapse {
   cursor: pointer;
   &:hover {
      color: @color_ListView-GroupBy_text_hovered;
   }
}

.controls-GroupBy__separatorCollapse:before {
   content: '\e000';
   float: left;
   width: @font-size_ListView-GroupBy_expander;
   font-size: @font-size_ListView-GroupBy_expander;
   margin: @margin_ListView-GroupBy_separatorCollapse;
}
.controls-GroupBy__separatorCollapse__collapsed:before {
   content: '\e013';
}