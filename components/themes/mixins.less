.text-overflow() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.user-select(@select: none) {
  -webkit-touch-callout: @select;
  -webkit-user-select: @select;
  -khtml-user-select: @select;
  -moz-user-select: @select;
  -ms-user-select: @select;
  user-select: @select;
}
.icon-16() {
  font-size: 16px !important;
  line-height: 16px !important;
  width: 16px;
  height: 16px;
  font-family: 'cbuc-icons' !important;
}

.icon-24() {
  font-size: 24px !important;
  line-height: 24px !important;
  width: 24px;
  height: 24px;
  font-family: 'cbuc-icons24' !important;
}

.icon-32() {
  font-size: 32px !important;
  line-height: 32px !important;
  width: 32px;
  height: 32px;
  font-family: 'cbuc-icons' !important;
}

.icon-size(@size: 16px, @fontFamily: @default-icon-font) {
  font-size: @size !important;
  line-height: @size !important;
  width: @size;
  height: @size;
  font-family: @fontFamily !important;
}

.icon-size-without-important(@size: 16px, @fontFamily: @default-icon-font) {
  font-size: @size;
  width: @size;
  height: @size;
  font-family: @fontFamily;
}

.icon(@size: @default-icon-size, @fontFamily: @default-icon-font) {
  font-size: @size;
  width: @size;
  height: @size;
  font-family: @fontFamily;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  display: inline-block;
}

.closedHandCursor() {
   cursor: -moz-grabbing !important;
   cursor: -webkit-grabbing !important;
   cursor: grabbing !important;
}

.placeholder(@color: @default-placeholder-color) {
  &::-webkit-input-placeholder {
    opacity: 1;
    color: @color;
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    user-select: none;
    text-overflow:ellipsis;
  }

  &::-moz-placeholder {
    opacity: 1;
    color: @color;
    -moz-user-select: none;
    text-overflow:ellipsis;
  }

  &:-ms-input-placeholder {
    opacity: 1;
    color: @color;
    //-ms-user-select: none; Убираю, т.к. из-за этого IE ставит курсор не в инпут, а куда то в рандомное место на странице
    text-overflow:ellipsis;
  }
}

.hiddenPlaceholder() {
  &::-webkit-input-placeholder { opacity: 0 }
  &:-moz-placeholder {  opacity: 0 }
  &::-moz-placeholder {  opacity: 0 }
  &:-ms-input-placeholder {  opacity: 0 }
}

.compatPlaceholder(@color: @default-placeholder-color) {
  .user-select(none);
  display: none;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 100%;
  cursor: text;
  color: @color;
  font: inherit;
}

.box-sizing(@type: border-box) {
  -webkit-box-sizing: @type;
  -moz-box-sizing: @type;
  box-sizing: @type;
}

.box-shadow(@string) {
  -webkit-box-shadow: @string;
  -moz-box-shadow: @string;
  box-shadow: @string;
}

.border-radius(@radius: 5px) {
  -webkit-border-radius: @radius;
  -moz-border-radius: @radius;
  border-radius: @radius;
}

.border-radiuses(@topright: 0, @bottomright: 0, @bottomleft: 0, @topleft: 0) {
  -webkit-border-top-right-radius: @topright;
  -webkit-border-bottom-right-radius: @bottomright;
  -webkit-border-bottom-left-radius: @bottomleft;
  -webkit-border-top-left-radius: @topleft;

  -moz-border-radius-topright: @topright;
  -moz-border-radius-bottomright: @bottomright;
  -moz-border-radius-bottomleft: @bottomleft;
  -moz-border-radius-topleft: @topleft;

  border-top-right-radius: @topright;
  border-bottom-right-radius: @bottomright;
  border-bottom-left-radius: @bottomleft;
  border-top-left-radius: @topleft;
  -webkit-background-clip: padding-box;
  -moz-background-clip: padding;
  background-clip: padding-box;
}

.round-button-mixin(@border-color, @border-radius, @border-width_IconButton-icon) {
  border: @border-width_IconButton-icon solid @border-color;
  border-radius: @border-radius;
}

.button-default-style(@button-font-size: @font-size_Button_default, @button-default-shadow: none) {
  display: inline-block;
  outline: none;
  line-height: normal;
  .box-sizing(border-box);
  font-family: @default-font-name;
  font-size: @button-font-size;
  font-weight: normal;
  position: relative;
  .box-shadow(@button-default-shadow);
  border: none;
  padding: 0;
}
.button-wrapper-default-style() {
  .inline-flexbox();
  box-sizing: border-box;
  height: 100%;
  width: 100%;
  .align-items(center);
}

.baseline-fix() {
  &:before {
    content: '\200b'; //zero width space
    width: 0;
    display: inline-block;
    visibility: hidden;
  }
}

.opacity(@opacity: 0.5) {
  -webkit-opacity: @opacity;
  -moz-opacity: @opacity;
  opacity: @opacity;
}

.gradient(@startColor: #eee, @endColor: white) {
  background-color: @startColor;
  background: -webkit-gradient(linear, left top, left bottom, from(@startColor), to(@endColor));
  background: -webkit-linear-gradient(top, @startColor, @endColor);
  background: -moz-linear-gradient(top, @startColor, @endColor);
  background: -ms-linear-gradient(top, @startColor, @endColor);
  background: -o-linear-gradient(top, @startColor, @endColor);
}

.horizontal-gradient(@startColor: #eee, @endColor: white, @direction: left) {
  background-color: @startColor;
  background-image: -webkit-gradient(linear, @direction top, right top, from(@startColor), to(@endColor));
  background-image: -webkit-linear-gradient(@direction, @startColor, @endColor);
  background-image: -moz-linear-gradient(@direction, @startColor, @endColor);
  background-image: -ms-linear-gradient(@direction, @startColor, @endColor);
  background-image: -o-linear-gradient(@direction, @startColor, @endColor);
}

.animation(@name, @duration: 300ms, @delay: 0ms, @ease: ease) {
  -webkit-animation: @name @duration @delay @ease;
  -moz-animation: @name @duration @delay @ease;
  -ms-animation: @name @duration @delay @ease;
  animation: @name @duration @delay @ease
}

.transition(@transition) {
  -webkit-transition: @transition;
  -moz-transition: @transition;
  -ms-transition: @transition;
  -o-transition: @transition;
}

.transform(@string){
  -webkit-transform: @string;
  -moz-transform: @string;
  -ms-transform: @string;
  -o-transform: @string;
  transform: @string;
}

.scale(@factor) {
  -webkit-transform: scale(@factor);
  -moz-transform: scale(@factor);
  -ms-transform: scale(@factor);
  -o-transform: scale(@factor);
}

.rotate(@deg) {
  -webkit-transform: rotate(@deg);
  -moz-transform: rotate(@deg);
  -ms-transform: rotate(@deg);
  -o-transform: rotate(@deg);
}

.skew(@deg, @deg2) {
  -webkit-transform: skew(@deg, @deg2);
  -moz-transform: skew(@deg, @deg2);
  -ms-transform: skew(@deg, @deg2);
  -o-transform: skew(@deg, @deg2);
}

.translate(@x, @y:0) {
  -webkit-transform: translate(@x, @y);
  -moz-transform: translate(@x, @y);
  -ms-transform: translate(@x, @y);
  -o-transform: translate(@x, @y);
}

.translate3d(@x, @y: 0, @z: 0) {
  -webkit-transform: translate3d(@x, @y, @z);
  -moz-transform: translate3d(@x, @y, @z);
  -ms-transform: translate3d(@x, @y, @z);
  -o-transform: translate3d(@x, @y, @z);
}

.perspective(@value: 1000) {
  -webkit-perspective: @value;
  -moz-perspective: @value;
  -ms-perspective: @value;
  perspective: @value;
}

.transform-origin(@x:center, @y:center) {
  -webkit-transform-origin: @x @y;
  -moz-transform-origin: @x @y;
  -ms-transform-origin: @x @y;
  -o-transform-origin: @x @y;
}
.vertical-center-mixin(@padding-top, @height){
   position: absolute;
   top: 50%;
   margin-top: -(@height / 2 - @padding-top);
}

.marker(@position: left top) {
  background-image: url("@{themeName}/img/rowSelect.png");
  background-position: @position;
  background-repeat: repeat-y;
  background-size: @background-size_Marker;
}

.inline-flexbox() {
  display: inline-flex;
  display: -ms-flexbox; // в ie10 нет inline-flex ("https://msdn.microsoft.com/en-us/library/hh673531(v=vs.85).aspx")
  display: -ms-inline-flexbox;
  display: -webkit-inline-flex;
}

.flexbox() {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}
.flex-direction(@direction: row){
  -webkit-flex-direction: @direction;
  -moz-flex-direction: @direction;
  -ms-flex-direction: @direction;
  flex-direction: @direction;
}
.flex-wrap(@wrap) {
  flex-wrap: @wrap;
  -ms-flex-wrap: @wrap;
  -webkit-flex-wrap: @wrap;
}
// Use .flex-shrink() forced: in IE10-11 flex-shrink is 0 by default (1 is default value defined in the specification)
.flex-shrink(@shrink: 1) {
   -webkit-flex-shrink: @shrink;
   -ms-flex-negative: @shrink; //ie10
   -ms-flex-shrink: @shrink;
   flex-shrink: @shrink;
}
// Cross-axis Alignment
// - applies to: flex items
// auto | flex-start | flex-end | center | baseline | stretch
.align-self(@align: auto) {
  .ms-flex-align-self(@align); // IE10
  -webkit-align-self: @align;
      -ms-align-self: @align;
          align-self: @align;
}
.ms-flex-align-self(@align) when (@align = flex-start) {
  -ms-flex-item-align: start;
}

.ms-flex-align-self(@align) when (@align = flex-end) {
  -ms-flex-item-align: end;
}

.ms-flex-align-self(@align) when (@align = auto), (@align = center), (@align = baseline), (@align = stretch) {
  -ms-flex-item-align: @align;
}
// Flex Direction and Wrap
// - applies to: flex containers
// <flex-direction> || <flex-wrap>
.flex-flow(@flow) {
  -webkit-flex-flow: @flow;
      -ms-flex-flow: @flow;
          flex-flow: @flow;
}
// Flex basis
// - the initial main size of the flex item
// - applies to: flex itemsnitial main size of the flex item
// <width>
.flex-basis(@width: auto) {
  -webkit-flex-basis: @width;
  -ms-flex-preferred-size:@width;
  -ms-flex-basis: @width;
  flex-basis: @width;
}
.flex-grow(@grow: 0) {
   -webkit-flex-grow: @grow;
   -ms-flex-positive: @grow;//ie10
   -ms-flex-grow: @grow;
   flex-grow: @grow;
}
// Packing Flex Lines
// - applies to: multi-line flex containers
// flex-start | flex-end | center | space-between | space-around | stretch
.align-content(@align: stretch) {
  -webkit-align-content: @align;
      -ms-align-content: @align;
          align-content: @align;
}

.justify-content(@justify: flex-start) {
   -webkit-justify-content: @justify;
   -ms-justify-content: @justify;
   justify-content: @justify;
   //ie 10 fix
   & when (@justify = space-between) {
      -ms-flex-pack: justify;
   }
   & when (@justify = flex-end) {
      -ms-flex-pack: end;
   }
   & when (@justify = flex-start) {
      -ms-flex-pack: start;
   }
   & when (@justify = center) {
      -ms-flex-pack: center;
   }
}
.align-items(@align: stretch) {
   -webkit-align-items: @align;
   -ms-flex-align: @align; //ie10
   -ms-align-items: @align;
   align-items: @align;
}

.order(@val) {
  -webkit-box-ordinal-group: @val;
  -moz-box-ordinal-group: @val;
  -ms-flex-order: @val;
  -webkit-order: @val;
  order: @val;
}
//Решаем проблему лишних отступов между inline-block элементами лежащими друг за другом.
//ВАЖНО: Если не задано значение @child-font-size то у всех дочерних элементов блока, с данным стилем, должен быть указан собственный font-size.
.inline-block-bug-fix(@child-font-size: 0) {
  font-size: 0;

  & when (@child-font-size > 0) {
    & > * {
      font-size: @child-font-size;
    }
  }
}

.ws-header-mixin(@padding-left, @padding-right, @font-size, @color, @height, @hoverColor: @color) {
  display: inline-block;
  padding-left: @padding-left;
  padding-right: @padding-right;
  font-size: @font-size;
  font-weight: @font-weight_Header;
  font-family: @default-font-name;
  color: @color;
  height: @height;
  line-height: @height;
  &:hover {
    color:@hoverColor;
  }
}

.ws-header-content-mixin(@content, @font, @color) {
  content: @content;
  font: @font;
  color: @color;
}
.link-hover-mixin(@textColor, @iconColor, @textSelector) {
  &:hover {
    color: @textColor;
    // по ховеру нужно перекрашивать primary иконку, поэтому используем каскад
    // иконки других значений icon-done, icon-error etc. перекрашивать не нужно
    .icon-primary.controls-Button__icon {
      color: @iconColor;
    }
    .@{textSelector} {
      text-decoration: underline;
    }
  }
}

.button-mixin(@icon-left, @icon-width, @border-width, @margin-left, @margin-right) {
  left: calc(@icon-left ~"-" @border-width);
  top: 50%;
  margin-top: -@icon-width/2;

  & + .controls-Button__text {
    margin-right: calc(@margin-right ~'-' @border-width);
    margin-left: calc(@margin-left ~'+' @icon-width ~'+' @spacing_Button-between-icon-text ~'-' @border-width);
  }
}

.checkbox() {
  .user-select();
  width: @width_CheckBox;
  height: @height_CheckBox;
}

.checkbox-border-size() {
  &:before {
    .box-sizing();
    content: '';
    position: absolute;
    border-width: @default-border-width;
    border-style: solid;
    width: @check-box-icon-box-size;
    height: @check-box-icon-box-size;
    margin: (@height_CheckBox - @check-box-icon-box-size) / 2 (@width_CheckBox - @check-box-icon-box-size) / 2;;
  }
}

.checkbox-border-color(@enabledColor, @disabledColor, @selector) {
  .ws-enabled>.@{selector}:before {
    border-color: @enabledColor;
  }
  .ws-disabled>.@{selector}:before {
    border-color: @disabledColor;
  }
}
.checkbox-checked-size() {
  &:after {
    font-family: 'cbuc-icons';
    content: '\e616';
    position: absolute;
    font-size: @check-box-icon-successful-size;
    height: @check-box-icon-successful-size;
    width: @check-box-icon-successful-size;
    line-height: @check-box-icon-successful-size;
    top: @check-box-icon-successful-top;
    left: @check-box-icon-successful-left;


    // На iPad при расчете высоты оказывается, что она на 1px больше, чем на других устройствах. Выравнивание галки по
    // вертикали осуществляется через line-height равным высоте. Поэтому галка уезжает вверх. Чтобы это поправить мы
    // увеличим line-height в iPad на 1px;
    .ws-is-mobile-platform & {
      line-height: calc(~"@{check-box-icon-successful-size} + 1px");
    }
  }
}

.checkbox-checked-color(@enabledColor, @disabledColor, @selector) {
  .ws-enabled.controls-Checked__checked>.@{selector}:after {
    color: @enabledColor;
  }
  .ws-disabled.controls-Checked__checked>.@{selector}:after {
    color: @disabledColor;
  }
}
.checkbox-null-size() {
  &:after {
    left: 0;
    content: '';
    position: absolute;
    height: @check-box-icon-null-size;
    width: @check-box-icon-null-size;
    line-height: @check-box-icon-null-size;
    margin: (@height_CheckBox - @check-box-icon-null-size) / 2 (@width_CheckBox - @check-box-icon-null-size) / 2;
  }
}

.checkbox-null-color(@enabledColor, @disabledColor, @selector) {
  .ws-enabled.controls-ToggleButton__null>.@{selector}:after {
    background-color: @enabledColor;
  }
  .ws-disabled.controls-ToggleButton__null>.@{selector}:after {
    background-color: @disabledColor;
  }
}

.hyphens(@hyphenation) {
  -webkit-hyphens: @hyphenation;
  -moz-hyphens: @hyphenation;
  -ms-hyphens: @hyphenation;
  hyphens: @hyphenation;
}

.reset-browser-input-styles() {
  border: none;
  outline: none;
  background: transparent;
  .box-shadow(none);
}

.generate-height(@className, @line-height, @i: 1) when (@i =< 10) {
  .@{className}_maxheight-@{i} {
    max-height : @i * @line-height;
  }
  .@{className}_minheight-@{i} {
    min-height: @i * @line-height;
  }
  .generate-height(@className, @line-height, @i + 1);
}

//---------------Имитация цикла for---------------//
.for(@_i, @_n, @callback) when not (@_i = (@_n + 1)){
  @callback();
  .for(@_i + 1, @_n, @callback);
}

.for(@array, @callback) when (isnumber(@array)) {
  .for(@_i: 1, @array, @callback);
}

.for(@array, @callback) when not (isnumber(@array)) {
  .for-recursive(@array, length(@array), @callback);
}

.for-recursive(@array, @_i, @callback) when (@_i > 0) {
  & {
    @_item: extract(@array, @_i);
    @callback();
  }
  .for-recursive(@array, (@_i - 1), @callback);
}

//------------------------------------------------//

.top-right-triangle(@size) {
  border-style: solid;
  border-width: 0 @size @size 0;
  border-top-color: transparent;
  border-left-color: transparent;
  border-bottom-color: transparent;
}

.border-with-pseudo-element(@color: @default-border-color, @width: @default-border-width, @border-radius: 0) {
  &:after {
    content: '\200b';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    box-sizing: border-box;
    border: @width solid @color;
    border-radius: @border-radius;
    pointer-events: none;
  }
}


.ws-header-size-mixin(@text-size, @height: @default-height) {
  display: inline-block;
  font-size: @text-size;
  height: @height;
  line-height: @height;
  font-family: @default-font-name;
}
.ws-back-arrow-size-mixin(@width, @height) {
  &:before {
    display: inline-block;
    width: @width;
    height: @height;
  }
}

.ws-close-button() {
   cursor: pointer;
   border-style: solid;
   width: @width_CloseButton - extract(@border-width_CloseButton, 2) - extract(@border-width_CloseButton, 4);
   height: @height_CloseButton - extract(@border-width_CloseButton, 1) - extract(@border-width_CloseButton, 3);
   font-family: @default-icon-font;
   line-height: @height_CloseButton;
   font-size: @font-size_CloseButton;
   box-shadow: @box-shadow_CloseButton;
   border-width: @border-width_CloseButton;
   border-color: @border-color_CloseButton;
   border-radius: @border-radius_CloseButton;
   background-color: @background-color_CloseButton;
   .flexbox();
   .align-items(center);
   .justify-content(center);
   &:before {
      color: @color_CloseButton-icon;
      text-shadow: @text-shadow_Button;
      content: @content_CloseButton_icon;
   }
   body:not(.ws-is-mobile-platform) &:hover, &:active {
      background-color: @background-color_CloseButton_hover;
      &:before {
         color: @color_CloseButton-icon_hover;
      }
   }
}