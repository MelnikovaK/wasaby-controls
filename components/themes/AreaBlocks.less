.ws-Block {
   position: relative;
   border-style: solid;
   border-width: @spacing_Block / 2 + @border-width_Block;
   .box-sizing();
   .for(6, { &_style_@{_i} {
      background-color: ~"@{bg_Block_style-@{_i}}";
   } });

   /**
    * On mobile devices due to the native rendering between the blocks when using the "border" is free space.
    * The color of the blocks borders and the space background is different. There is no problem when using" outline".
    * To abandon the "border" is impossible because "outline" is not included in the width value in the calculations.
    * The solution is only used on mobile devices because property outline-offset not support in ie browser.
    */
   body.ws-is-mobile-platform & {
      border-color: transparent;
      outline: @spacing_Block / 2 + @border-width_Block solid @bg_BlockLayout;
      outline-offset: -(@spacing_Block / 2 + @border-width_Block);
   }

   body.ws-is-desktop-platform & {
      border-color: @bg_BlockLayout;
   }

   /**
    * TODO: pointer-events работает в ie начиная с 11 версии.
    * Поэтому живем в ie10 без тени на блоках.
    * Убрать body:not(.ws-is-ie10), когда откажемся от e10.
    */
   body:not(.ws-is-ie10) &:after {
      content: '';
      position: absolute;
      pointer-events: none;
      top: -@border-width_Block;
      right: -@border-width_Block;
      bottom: -@border-width_Block;
      left: -@border-width_Block;
      border: @border-width_Block solid @border-color_Block;
      border-radius: @border-radius_Block;
      box-shadow: @box-shadow_Block;
   }

   // TODO: Не понятно должно ли быть в блоках. Раскоментировать или перенести после обсуждения.
   /*&Separator {
      width: 100%;
      height: @height_BlockSeparator;
      background: @bg_BlockSeparator;
   }*/

   &Layout {
      overflow: hidden;
      background-color: @bg_BlockLayout;
      & > .ws-BlockGroup {
         margin-left: @margin_BlockGroup;
         margin-right: @margin_BlockGroup;
         &:first-of-type {
            margin-top: @margin_BlockGroup;
         }
         &:last-of-type {
            margin-bottom: @margin_BlockGroup;
         }
      }
      &_detached {
         padding-top: @spacing_Block;
      }
   }
}