define(
   [ // Массив зависимостей компонента
      'js!WS.Data.Source.Memory', // Подключаем класс для работы со статическим источником данных
      'js!WS.Data.Entity.Model' // Подключаем класс для работы с моделью данных
   ],
   function( // Подключенные в массиве зависимостей файлы будут доступны в следующих переменных
      MemorySource, // В эту переменную импортируется класс для работы со статическим истчоником данных
      Model // В эту переменную импортируется класс для работы с моделью данных
   ){
      var lastId = 9, // устанавливаем счетчик идентификатора последней записи источника
          items = [ // массив сырых данных, будет преоброзован в статический источник данных
             {'@Идентификатор':1, 'Наименование': 'Ноутбуки', 'Раздел': null, 'Раздел@': true},
             {'@Идентификатор':2, 'Наименование': 'Ультрабуки', 'Раздел': 1, 'Раздел@': true},
             {'@Идентификатор':3, 'Наименование': 'Apple', 'Раздел': 2, 'Раздел@': true},
             {'@Идентификатор':4, 'Наименование': 'Apple MacBook Pro 15','Раздел': 3, 'Раздел@': null},
             {'@Идентификатор':5, 'Наименование': 'Dell Inspiron 3521', 'Раздел': 1, 'Раздел@': null},
             {'@Идентификатор':6, 'Наименование': 'Фотоаппараты', 'Раздел': null, 'Раздел@': true} ,
             {'@Идентификатор':7, 'Наименование': 'Canon EOS 600D Kit', 'Раздел' : 6, 'Раздел@': null},
             {'@Идентификатор':8, 'Наименование': 'Nikon D5200 Kit', 'Раздел' : 6, 'Раздел@': null},
             {'@Идентификатор':9, 'Наименование': 'USB Flash Corsair 64 Гб', 'Раздел': null, 'Раздел@': null}
          ];
      return new MemorySource({
         data: items, // передаём в качестве данных созданный массив
         idProperty: '@Идентификатор', // указываем поле первичного ключа
         /* Расширяем модель по работе с данными. В нашем случаем требуется иметь возможность
         добавлять записи в статический источник данных. Для этого нужно определить как будет
         формироваться идентификатор новой записи, а также заполнены остальные поля (properties). */
         model: Model.extend({
            $protected: {
               _options: {
                  properties: {
                     // задаём параметры, которые будут использованы при создании новой записи
                     '@Идентификатор': { def: function() {
                        return ++lastId;
                     }},
                     'Наименование': { def: ''},
                     'Раздел': { def: null},
                     'Раздел@': { def: null}
                  }
               }
            }
         })
      })
   }
);