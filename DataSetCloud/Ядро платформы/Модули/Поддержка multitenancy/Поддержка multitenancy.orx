<?xml version="1.0" encoding="WINDOWS-1251" ?>
<repository orx_version="1.72">

  <object last_changed="Драгутенко А.А." name="БазовыйПользователь" responsible="Драгутенко А.А.">
    <object last_changed="Драгутенко А.А." name="Клиент" responsible="Драгутенко А.А.">
      <select access_mode="1" is_service="0" last_changed="Шаброва А.Н." name="Клиент.ВозможностьРазворотаСхемы" responsible="Шаброва А.Н." returns="SCALAR" type="PYTHON">
        <return name="___SBIS_SCALAR_RETURN___">
          <format>
            <type>BOOLEAN</type>
          </format>
        </return>
        <definition>
          <language>PYTHON</language>
          <body>scheme_create = Config.Instance().GetBool( 'ГенерацияПерсональныхДанныхТолькоРоботом', True )
if scheme_create is True :
   raise Error( 'Установлен параметр конфигурации "ГенерацияПерсональныхДанныхТолькоРоботом"=Да. Нет возможности развернуть схему!', 'Установлен параметр конфигурации "ГенерацияПерсональныхДанныхТолькоРоботом"=Да. Нет возможности развернуть схему!' )
return True</body>
        </definition>
      </select>
      <select access_mode="1" is_service="0" last_changed="Драгутенко А.А." name="Клиент.ОтложитьОбновление" responsible="Драгутенко А.А." returns="NONE" type="PYTHON">
        <comment>Метод, получающий идентификатор клиента и запускающий метод Клиент.ОтложитьОбновление(ИдКлиента)</comment>
        <definition>
          <language>PYTHON</language>
          <body>ИдКлиента = Session.ClientID()
obj = BLObject('Клиент', 'СервисАдминистрирования')
obj.AsyncInvoke("ОтложитьОбновление", ИдКлиента)</body>
        </definition>
      </select>
      <select access_mode="1" is_service="0" last_changed="Драгутенко А.А." name="Клиент.ПроверитьУведомление" responsible="Драгутенко А.А." returns="SCALAR" type="PYTHON">
        <comment>Получает из сессии идентификатор клиента и отправляет его методу ПроверитьУведомление(ИдКлиента)</comment>
        <return name="___SBIS_SCALAR_RETURN___">
          <format>
            <type>TEXT</type>
          </format>
        </return>
        <definition>
          <language>PYTHON</language>
          <body>ИдКлиента = Session.ClientID()
obj = BLObject('Клиент', 'СервисАдминистрирования')
res = obj.Invoke("ПроверитьУведомление", ИдКлиента)
return res</body>
        </definition>
      </select>
      <select access_mode="1" is_service="0" last_changed="Драгутенко А.А." name="Клиент.СогласенОбновляться" responsible="Драгутенко А.А." returns="NONE" type="PYTHON">
        <comment>Получает идентификатор клиента и вызывает Клиент.СогласенОбновляться(ИдКлиента)</comment>
        <definition>
          <language>PYTHON</language>
          <body>ИдКлиента = Session.ClientID()
obj = BLObject('Клиент', 'СервисАдминистрирования')
obj.AsyncInvoke("СогласенОбновляться", ИдКлиента)</body>
        </definition>
      </select>
    </object>
  </object>

  <object name="ПерсональныеДанные">
    <select access_mode="0" is_service="0" last_changed="Майер И.Ю." module_api_part="1" name="ПерсональныеДанные.GetKeysPKConstraints" responsible="Майер И.Ю." returns="TABLE" type="SQL">
      <return name="TableName">
        <format>
          <type>TEXT</type>
        </format>
      </return>
      <return name="Keys">
        <format>
          <type>TEXT</type>
        </format>
      </return>
      <return name="Types">
        <format>
          <type>TEXT</type>
        </format>
      </return>
      <definition>
        <language>PLPGSQL</language>
        <body>select
  _table TableName,
  string_agg( _keys, ',' ) Keys,
  string_agg( _typname, ',' ) Types
from
  ( select 
      cr.relname::text _table,
      a.attname  _keys,
      t.typname _typname
    from pg_index i
      join pg_class cr on ( cr.oid = i.indrelid )
      join pg_namespace n on ( n.oid = cr.relnamespace )
      join pg_attribute a on ( a.attrelid = cr.oid )
      join pg_type t on ( a.atttypid = t.oid )
    where i.indisprimary and
          n.nspname = 'public' and
          exists ( select 1 from unnest( i.indkey ) p(c) where p.c = a.attnum ) order by _table, a.attnum ) sub
group by TableName</body>
      </definition>
    </select>
    <select access_mode="0" is_service="0" last_changed="Майер И.Ю." module_api_part="1" name="ПерсональныеДанные.GetOidsTablesSchema" responsible="Майер И.Ю." returns="TABLE" type="PYTHON">
      <parameter name="ListTables">
        <format>
          <type>TEXT[]</type>
        </format>
      </parameter>
      <parameter name="NameSchema">
        <format>
          <type>TEXT</type>
        </format>
      </parameter>
      <return name="TableOid">
        <format>
          <type>TEXT</type>
        </format>
      </return>
      <return name="TableName">
        <format>
          <type>TEXT</type>
        </format>
      </return>
      <definition>
        <language>PYTHON</language>
        <body>if len(ListTables) == 0:
   raise Error( 'Передан пустой список таблиц схемы. Oid-ы таблиц определяться не будут.' )
if len(NameSchema) == 0:
   raise Error( 'Не задано имя схемы. Oid-ы таблиц определяться не будут.' )   
list_tables_conc = ','.join("""'{0}'""".format(val) for val in ListTables)
query="""
         select
           oid::text "TableOid",
           relname::text "TableName"
         from 
           pg_class 
         where 
           relname::text in ( {list_tables} ) and
           relnamespace = ( select 
                              oid 
                            from 
                              pg_namespace 
                            where nspname = {schema!r} ) order by relname::text asc;
      """.format( list_tables = list_tables_conc, schema = NameSchema )
return SqlQuery( query )</body>
      </definition>
    </select>
    <select access_mode="0" is_service="0" last_changed="Майер И.Ю." module_api_part="1" name="ПерсональныеДанные.GetRegClassFldTables" responsible="Майер И.Ю." returns="TABLE" type="PYTHON">
      <parameter name="ListTables">
        <format>
          <type>TEXT[]</type>
        </format>
      </parameter>
      <parameter name="ListColumns">
        <format>
          <type>TEXT[]</type>
        </format>
      </parameter>
      <return name="TableName">
        <format>
          <type>TEXT</type>
        </format>
      </return>
      <definition>
        <language>PYTHON</language>
        <body>if len(ListTables) == 0:
   raise Error( 'Передан пустой список таблиц схемы. Поля типа RegClass таблиц определяться не будут.' )
reg_tbl_list = ','.join("""'"{0}"'::regclass""".format( val ) for val in ListTables)
reg_fld_list = ','.join("""'{0}'""".format( val ) for val in ListColumns)
query="""
         select
           cls.relname::text "TableName"
         from
           pg_attribute att inner join pg_class cls on att.attrelid = cls.oid
         where 
           att.attrelid in ( {reg_tbl_list} ) and
           att.attname is not null and att.atttypid = ( select typelem from pg_type where typname = '_regclass' ) and 
           att.attname::text in ( {reg_fld_list} );         
      """.format(reg_tbl_list=reg_tbl_list, reg_fld_list=reg_fld_list)
return SqlQuery( query )</body>
      </definition>
    </select>
    <select access_mode="0" is_proxy="0" is_service="0" last_changed="Майер И.Ю." module_api_part="1" name="ПерсональныеДанные.ВключитьОграниченияСхемы" responsible="Майер И.Ю." returns="SCALAR" type="NATIVE">
      <parameter name="ИмяСхемы">
        <format>
          <type>TEXT</type>
        </format>
      </parameter>
      <parameter name="Таблицы">
        <format>
          <type>TEXT[]</type>
        </format>
      </parameter>
      <return name="___SBIS_SCALAR_RETURN___">
        <format>
          <type>BOOLEAN</type>
        </format>
      </return>
    </select>
    <select access_mode="0" is_service="0" last_changed="Майер И.Ю." module_api_part="1" name="ПерсональныеДанные.ВосстановитьПоследовательностиСхемы" responsible="mayeriu" returns="SCALAR" type="PYTHON">
      <parameter name="ИдО">
        <format>
          <type>INT64</type>
        </format>
      </parameter>
      <return name="___SBIS_SCALAR_RETURN___">
        <format>
          <type>BOOLEAN</type>
        </format>
      </return>
      <definition>
        <language>PYTHON</language>
        <body>template = '00000000'
ido = hex(ИдО)[2:]
schema = "_{0}{1}".format(template[len(str(ido)):],ido)
return ПерсональныеДанные.ВосстановитьПоследовательностиСхемыПоИмени(schema)</body>
      </definition>
    </select>
    <select access_mode="0" is_service="0" last_changed="Майер И.Ю." module_api_part="1" name="ПерсональныеДанные.ВосстановитьПоследовательностиСхемыПоИмени" responsible="Майер И.Ю." returns="SCALAR" type="PYTHON">
      <parameter name="ИмяСхемы">
        <format>
          <type>TEXT</type>
        </format>
      </parameter>
      <return name="___SBIS_SCALAR_RETURN___">
        <format>
          <type>BOOLEAN</type>
        </format>
      </return>
      <definition>
        <language>PYTHON</language>
        <body>query="""
      do $$ 
      declare
      schema_ text = {schema!r};
      rec record;
      seq_ text;
      column_ text;
      query_ text;
      max_ integer;
      seq_count integer = 0;
      begin
      for rec in ( select tablename, schemaname
                   from pg_tables
                   where  schemaname =  schema_ ) loop
           execute
            'select 
               at.attname as column_name
            from         
               pg_attribute at inner join pg_catalog.pg_attrdef df on ( at.attrelid, at.attnum ) = ( df.adrelid, df.adnum )
            where 
               at.attrelid = ' || quote_literal( rec.schemaname || '.' || quote_ident( rec.tablename ) ) || '::regclass and
               at.attnum &gt; 0 and
               not at.attisdropped and
               df.adsrc like ''nextval%''
            order by at.attnum' into  column_;
          if( column_ is null ) then
                continue;
          end if;
          seq_ = pg_get_serial_sequence( rec.schemaname || '.' || quote_ident( rec.tablename ), column_ );    
          if( seq_ is null ) then
                continue;
          end if;
          query_= 'select ' || quote_ident( column_ )  || ' from ' || rec.schemaname || '.' || quote_ident( rec.tablename ) || ' order by ' || quote_ident( column_ )  || ' desc limit 1';
          execute query_ into max_;
          if( max_ is null ) then
           continue;
          end if; 
          execute 'select last_value from ' || seq_ into seq_count;
          if ( max_ &gt;= seq_count ) then 
            execute 'alter sequence '|| seq_ || ' restart with ' || ( max_ + 1 )::text;
          end if;
      end loop;
      end;
      $$;""".format( schema = ИмяСхемы )
SqlQueryScalar(query)
return True</body>
      </definition>
    </select>
    <select access_mode="0" is_proxy="0" is_service="0" name="ПерсональныеДанные.ДерегистрироватьДанныеКлиента" returns="SCALAR" type="NATIVE">
      <parameter name="ИдСессии">
        <format>
          <type>TEXT</type>
        </format>
      </parameter>
      <return name="___SBIS_SCALAR_RETURN___">
        <format>
          <type>BOOLEAN</type>
        </format>
      </return>
    </select>
    <select access_mode="0" is_proxy="0" is_service="0" last_changed="Майер И.Ю." module_api_part="1" name="ПерсональныеДанные.ЗаписатьДанныеВТаблицу" responsible="Майер И.Ю." returns="SCALAR" type="NATIVE">
      <parameter name="ИмяСхемы">
        <format>
          <type>TEXT</type>
        </format>
      </parameter>
      <parameter name="ИмяТаблицы">
        <format>
          <type>TEXT</type>
        </format>
      </parameter>
      <parameter name="СписокКолонок">
        <format>
          <type>TEXT[]</type>
        </format>
      </parameter>
      <parameter name="Данные">
        <format>
          <type>RPCFILE</type>
        </format>
      </parameter>
      <return name="___SBIS_SCALAR_RETURN___">
        <format>
          <type>BOOLEAN</type>
        </format>
      </return>
    </select>
    <select access_mode="0" is_proxy="0" is_service="0" last_changed="Майер И.Ю." module_api_part="1" name="ПерсональныеДанные.ЗапуститьОбработчикиПослеПеремещения" responsible="Майер И.Ю." returns="SCALAR" type="NATIVE">
      <parameter name="ИдКлиента">
        <format>
          <type>INT64</type>
        </format>
      </parameter>
      <parameter name="ИмяСхемы">
        <format>
          <type>TEXT</type>
        </format>
      </parameter>
      <return name="___SBIS_SCALAR_RETURN___">
        <format>
          <type>BOOLEAN</type>
        </format>
      </return>
    </select>
    <select access_mode="0" is_proxy="0" is_service="0" last_changed="Майер И.Ю." module_api_part="1" name="ПерсональныеДанные.ЗарегистрироватьДанныеДемоКлиента" responsible="Майер И.Ю." returns="SCALAR" type="NATIVE">
      <parameter name="ИдКлиента">
        <format>
          <type>INT64</type>
        </format>
      </parameter>
      <return name="___SBIS_SCALAR_RETURN___">
        <format>
          <type>BOOLEAN</type>
        </format>
      </return>
    </select>
    <select access_mode="0" is_proxy="0" is_service="0" last_changed="Щукин А.В." name="ПерсональныеДанные.ЗарегистрироватьДанныеКлиента" responsible="Щукин А.В." returns="SCALAR" type="NATIVE">
      <parameter name="ДанныеРегистрации">
        <format>
          <type>RECREFERENCE</type>
          <free>1</free>
        </format>
      </parameter>
      <return name="___SBIS_SCALAR_RETURN___">
        <format>
          <type>BOOLEAN</type>
        </format>
      </return>
    </select>
    <select access_mode="0" is_proxy="0" is_service="0" last_changed="Шаброва А.Н." name="ПерсональныеДанные.ЗарегистрироватьДанныеКлиентаБезПроверок" responsible="Шаброва А.Н." returns="SCALAR" type="NATIVE">
      <parameter name="ДанныеРегистрации">
        <format>
          <type>RECREFERENCE</type>
          <free>1</free>
        </format>
      </parameter>
      <return name="___SBIS_SCALAR_RETURN___">
        <format>
          <type>BOOLEAN</type>
        </format>
      </return>
    </select>
    <select access_mode="0" is_proxy="0" is_service="0" last_changed="Сбоев А.В." module_api_part="1" name="ПерсональныеДанные.ЗарегистрироватьДанныеПеремещённогоКлиента" responsible="Сбоев А.В." returns="SCALAR" type="NATIVE">
      <comment>Метод регистрации данных в новой схеме клиента при перемещении клиента</comment>
      <parameter name="ИмяСхемы">
        <format>
          <type>TEXT</type>
        </format>
      </parameter>
      <return name="___SBIS_SCALAR_RETURN___">
        <format>
          <type>BOOLEAN</type>
        </format>
      </return>
    </select>
    <select access_mode="1" is_service="0" last_changed="Майер И.Ю." module_api_part="1" name="ПерсональныеДанные.КодировкаБД" responsible="Бойцов Е.А." returns="SCALAR" type="SQL">
      <comment>Метод возвращает кодировку БД, с которой работает сервис БЛ. Результатом будет что-то типа WIN1251</comment>
      <return name="___SBIS_SCALAR_RETURN___">
        <format>
          <type>TEXT</type>
        </format>
      </return>
      <definition>
        <language>PLPGSQL</language>
        <body>select pg_encoding_to_char( encoding ) from pg_catalog.pg_database where datname = current_database();</body>
      </definition>
    </select>
    <select access_mode="0" is_proxy="0" is_service="0" last_changed="Майер И.Ю." module_api_part="1" name="ПерсональныеДанные.ОтключитьОграниченияСхемы" responsible="Майер И.Ю." returns="SCALAR" type="NATIVE">
      <parameter name="ИмяСхемы">
        <format>
          <type>TEXT</type>
        </format>
      </parameter>
      <parameter name="Таблицы">
        <format>
          <type>TEXT[]</type>
        </format>
      </parameter>
      <return name="___SBIS_SCALAR_RETURN___">
        <format>
          <type>BOOLEAN</type>
        </format>
      </return>
    </select>
    <select access_mode="0" is_proxy="0" is_service="0" last_changed="Майер И.Ю." module_api_part="1" name="ПерсональныеДанные.ОчиститьТаблицыСхемы" responsible="Майер И.Ю." returns="SCALAR" type="NATIVE">
      <parameter name="ИмяСхемы">
        <format>
          <type>TEXT</type>
        </format>
      </parameter>
      <parameter name="Таблицы">
        <format>
          <type>TEXT[]</type>
        </format>
      </parameter>
      <return name="___SBIS_SCALAR_RETURN___">
        <format>
          <type>BOOLEAN</type>
        </format>
      </return>
    </select>
    <select access_mode="0" is_proxy="0" is_service="0" last_changed="Майер И.Ю." module_api_part="1" name="ПерсональныеДанные.ПереименоватьСхему" responsible="Майер И.Ю." returns="SCALAR" type="NATIVE">
      <parameter name="ИмяСхемы">
        <format>
          <type>TEXT</type>
        </format>
      </parameter>
      <parameter name="ИмяСхемыНовое">
        <format>
          <type>TEXT</type>
        </format>
      </parameter>
      <return name="___SBIS_SCALAR_RETURN___">
        <format>
          <type>BOOLEAN</type>
        </format>
      </return>
    </select>
    <select access_mode="0" is_proxy="0" is_service="0" last_changed="Майер И.Ю." module_api_part="1" name="ПерсональныеДанные.ПолучитьЗаписиПКТаблицы" responsible="Майер И.Ю." returns="TABLE" type="NATIVE">
      <parameter name="Параметры">
        <format>
          <type>RECREFERENCE</type>
          <free>1</free>
        </format>
      </parameter>
    </select>
    <select access_mode="0" is_proxy="0" is_service="0" last_changed="Майер И.Ю." module_api_part="1" name="ПерсональныеДанные.ПолучитьЗаписиТаблицы" responsible="Майер И.Ю." returns="SCALAR" type="NATIVE">
      <parameter name="Параметры">
        <format>
          <type>RECREFERENCE</type>
          <free>1</free>
        </format>
      </parameter>
      <return name="___SBIS_SCALAR_RETURN___">
        <format>
          <type>RPCFILE</type>
        </format>
      </return>
    </select>
    <select access_mode="0" is_service="0" last_changed="Майер И.Ю." module_api_part="1" name="ПерсональныеДанные.ПолучитьКонтрольнуюСуммуСхемы" responsible="mayeriu" returns="SCALAR" type="PYTHON">
      <parameter name="ИдО">
        <format>
          <type>INT64</type>
        </format>
      </parameter>
      <return name="___SBIS_SCALAR_RETURN___">
        <format>
          <type>TEXT</type>
        </format>
      </return>
      <definition>
        <language>PYTHON</language>
        <body>template = '00000000'
ido = hex(ИдО)[2:]
schema = "_{0}{1}".format(template[len(str(ido)):],ido)
return ПерсональныеДанные.ПолучитьКонтрольнуюСуммуСхемыПоИмени(schema)</body>
      </definition>
    </select>
    <select access_mode="0" is_service="0" last_changed="Майер И.Ю." module_api_part="1" name="ПерсональныеДанные.ПолучитьКонтрольнуюСуммуСхемыПоИмени" responsible="Майер И.Ю." returns="SCALAR" type="PYTHON">
      <parameter name="ИмяСхемы">
        <format>
          <type>TEXT</type>
        </format>
      </parameter>
      <return name="___SBIS_SCALAR_RETURN___">
        <format>
          <type>TEXT</type>
        </format>
      </return>
      <definition>
        <language>PYTHON</language>
        <body>query="""
   select
      coalesce( md5( array_to_string( array_agg( hash ), '' ) ), '' )
   from (
         select 
            md5( relname || attname || format_type( atttypid, atttypmod ) || attnotnull::text || 
            ( case when adsrc similar to E'nextval\\\\(\\\\(pg_get_serial_sequence\\\\(''"?[^"]+"?.%' then 
                      regexp_replace( adsrc, E'nextval\\\\(\\\\(pg_get_serial_sequence\\\\(''("?[^"]+"?\\\\.)(.*)', E'_0_\\\\2')
                   when adsrc similar to E'nextval\\\\(\\\\(pg_get_serial_sequence\\\\(''%' then 
                      regexp_replace( adsrc, E'nextval\\\\(\\\\(pg_get_serial_sequence\\\\(''(.*)', E'_1_\\\\1')
                   when adsrc is null then
                      ''
                   else 
                      adsrc
              end )
            ) hash 
         from 
            pg_attribute
         join
            pg_class
               on attrelid = pg_class.oid
         left join
            pg_attrdef 
               on attnum = adnum and attrelid = adrelid 
         where
            relnamespace = ( select oid from pg_namespace where nspname = {schema!r} )
            and relkind = 'r'
            and attnum &gt; 0
            and attisdropped = false  
            and obj_description( pg_class.oid, 'pg_class' ) = 'sbis3_object'
         order by
            hash
      ) hashes;""".format( schema = ИмяСхемы )
return SqlQueryScalar(query)</body>
      </definition>
    </select>
    <select access_mode="0" is_proxy="0" is_service="0" last_changed="Майер И.Ю." module_api_part="1" name="ПерсональныеДанные.ПолучитьКонтрольнуюСуммуТаблицы" responsible="Майер И.Ю." returns="SCALAR" type="NATIVE">
      <parameter name="Параметры">
        <format>
          <type>RECREFERENCE</type>
          <free>1</free>
        </format>
      </parameter>
      <return name="___SBIS_SCALAR_RETURN___">
        <format>
          <type>TEXT</type>
        </format>
      </return>
    </select>
    <select access_mode="0" is_service="0" last_changed="Майер И.Ю." module_api_part="1" name="ПерсональныеДанные.ПолучитьПолеСвязи" responsible="Майер И.Ю." returns="TABLE" type="SQL">
      <return name="Таблица">
        <format>
          <type>TEXT</type>
        </format>
      </return>
      <return name="Поле">
        <format>
          <type>TEXT</type>
        </format>
      </return>
      <definition>
        <language>PLPGSQL</language>
        <body>select  
  cls.relname::text "Таблица",
  att.attname::text "Поле"
from
  ( ( select 
         atttypid, 
         attrelid, 
         attname 
      from 
         pg_attribute 
      where attname is not null ) a inner join ( select 
                                                   typelem 
                                                 from 
                                                   pg_type 
                                                 where typname = '_regclass' ) t on  a.atttypid = t.typelem ) att 
  inner join ( select 
                 oid,
                 relnamespace, 
                 relname 
               from 
                 pg_class 
               where relkind = 'r' ) cls on att.attrelid = cls.oid
  inner join ( select 
                 oid 
               from 
                 pg_namespace 
               where nspname = 'public' ) ns on ns.oid = cls.relnamespace</body>
      </definition>
    </select>
    <select access_mode="0" is_proxy="0" is_service="1" name="ПерсональныеДанные.Развернуть" returns="SCALAR" type="NATIVE">
      <parameter name="ИдКлиента">
        <format>
          <type>STRING</type>
          <max_size>8</max_size>
        </format>
      </parameter>
      <return name="___SBIS_SCALAR_RETURN___">
        <format>
          <type>BOOLEAN</type>
        </format>
      </return>
    </select>
    <select access_mode="0" is_proxy="0" is_service="0" last_changed="Майер И.Ю." module_api_part="1" name="ПерсональныеДанные.РазвернутьСхемуКлиента" responsible="Майер И.Ю." returns="SCALAR" type="NATIVE">
      <parameter name="ИдСессии">
        <format>
          <type>TEXT</type>
        </format>
      </parameter>
      <parameter name="ЧистаяСхема">
        <format>
          <type>BOOLEAN</type>
        </format>
      </parameter>
      <return name="___SBIS_SCALAR_RETURN___">
        <format>
          <type>BOOLEAN</type>
        </format>
      </return>
    </select>
    <select access_mode="0" is_proxy="0" is_service="0" last_changed="Майер И.Ю." module_api_part="1" name="ПерсональныеДанные.РазвернутьСхемуКлиентаПотомПереименовать" responsible="Майер И.Ю." returns="SCALAR" type="NATIVE">
      <parameter name="ИдСессии">
        <format>
          <type>TEXT</type>
        </format>
      </parameter>
      <parameter name="ЧистаяСхема">
        <format>
          <type>BOOLEAN</type>
        </format>
      </parameter>
      <return name="___SBIS_SCALAR_RETURN___">
        <format>
          <type>TEXT</type>
        </format>
      </return>
    </select>
    <select access_mode="1" is_proxy="0" is_service="0" last_changed="Майер И.Ю." module_api_part="1" name="ПерсональныеДанные.СписокТаблицСхемы" responsible="mayeriu" returns="TABLE" type="NATIVE">
      <parameter name="ИмяСхемы">
        <format>
          <type>TEXT</type>
        </format>
      </parameter>
      <return name="Таблица">
        <format>
          <type>TEXT</type>
        </format>
      </return>
      <return name="Колонки">
        <format>
          <type>TEXT</type>
        </format>
      </return>
    </select>
    <select access_mode="1" is_service="0" last_changed="Майер И.Ю." module_api_part="1" name="ПерсональныеДанные.СхемаЕсть" responsible="mayeriu" returns="SCALAR" type="PYTHON">
      <parameter name="ИдО">
        <format>
          <type>INT64</type>
        </format>
      </parameter>
      <return name="___SBIS_SCALAR_RETURN___">
        <format>
          <type>BOOLEAN</type>
        </format>
      </return>
      <definition>
        <language>PYTHON</language>
        <body>template = '00000000'
ido = hex(ИдО)[2:]
schema = "_{0}{1}".format(template[len(str(ido)):],ido)
return ПерсональныеДанные.СхемаЕстьПоИмени(schema)</body>
      </definition>
    </select>
    <select access_mode="0" is_service="0" last_changed="Майер И.Ю." module_api_part="1" name="ПерсональныеДанные.СхемаЕстьПоИмени" responsible="Майер И.Ю." returns="SCALAR" type="PYTHON">
      <parameter name="ИмяСхемы">
        <format>
          <type>TEXT</type>
        </format>
      </parameter>
      <return name="___SBIS_SCALAR_RETURN___">
        <format>
          <type>BOOLEAN</type>
        </format>
      </return>
      <definition>
        <language>PYTHON</language>
        <body>query='select exists( select null from pg_namespace where nspname = {schema!r} );'.format( schema = ИмяСхемы )
return SqlQueryScalar(query)</body>
      </definition>
    </select>
    <select access_mode="0" is_proxy="0" is_service="0" last_changed="Майер И.Ю." module_api_part="1" name="ПерсональныеДанные.УдалитьДанныеКлиента" responsible="Майер И.Ю." returns="SCALAR" type="NATIVE">
      <parameter name="ИдСессии">
        <format>
          <type>TEXT</type>
        </format>
      </parameter>
      <parameter name="ИдО">
        <format>
          <type>INT64</type>
        </format>
      </parameter>
      <return name="___SBIS_SCALAR_RETURN___">
        <format>
          <type>BOOLEAN</type>
        </format>
      </return>
    </select>
    <select access_mode="0" is_service="0" last_changed="Майер И.Ю." module_api_part="1" name="ПерсональныеДанные.УдалитьСхему" responsible="mayeriu" returns="SCALAR" type="PYTHON">
      <parameter name="ИдО">
        <format>
          <type>INT64</type>
        </format>
      </parameter>
      <return name="___SBIS_SCALAR_RETURN___">
        <format>
          <type>BOOLEAN</type>
        </format>
      </return>
      <definition>
        <language>PYTHON</language>
        <body>template = '00000000'
ido = hex(ИдО)[2:]
schema = "_{0}{1}".format(template[len(str(ido)):],ido)
return ПерсональныеДанные.УдалитьСхемуПоИмени(schema)</body>
      </definition>
    </select>
    <select access_mode="0" is_service="0" last_changed="Майер И.Ю." module_api_part="1" name="ПерсональныеДанные.УдалитьСхемуПоИмени" responsible="Майер И.Ю." returns="SCALAR" type="PYTHON">
      <parameter name="ИмяСхемы">
        <format>
          <type>TEXT</type>
        </format>
      </parameter>
      <return name="___SBIS_SCALAR_RETURN___">
        <format>
          <type>BOOLEAN</type>
        </format>
      </return>
      <definition>
        <language>PYTHON</language>
        <body>query='drop schema if exists {schema} cascade;'.format( schema = ИмяСхемы )
SqlQueryScalar(query)
return True</body>
      </definition>
    </select>
    <select access_mode="0" is_service="1" last_changed="Майер И.Ю." name="ПерсональныеДанные.УстановитьКонтекстКлиента" responsible="mayeriu" returns="SCALAR" type="PYTHON">
      <parameter name="ИдКлиента">
        <format>
          <type>STRING</type>
          <max_size>8</max_size>
        </format>
      </parameter>
      <return name="___SBIS_SCALAR_RETURN___">
        <format>
          <type>BOOLEAN</type>
        </format>
      </return>
      <definition>
        <language>PYTHON</language>
        <body>res = False
schema_name = '_' + str( ИдКлиента )
query='SELECT NOT EXISTS ( SELECT * FROM pg_namespace WHERE nspname = \'{schema}\' );'.format( schema = schema_name )
is_not_exist = SqlQueryScalar( query )
if is_not_exist:   
   params=Record()
   params.AddString('1', ИдКлиента)
   query='SELECT "ПерсональныеДанные.Развернуть"( $1 );'
   SqlQueryScalar( query, params )
   res = True
query='SET search_path TO {schema},public;'.format( schema = schema_name )
SqlQueryScalar( query );
return res</body>
      </definition>
    </select>
  </object>

  <object last_changed="Сбоев А.В." name="РегистраторСправочниковКлиента" responsible="Сбоев А.В.">
    <select access_mode="0" is_proxy="0" is_service="0" last_changed="Сбоев А.В." module_api_part="1" name="РегистраторСправочниковКлиента.ЗарегистрироватьДанные" responsible="Сбоев А.В." returns="SCALAR" type="NATIVE">
      <transaction type="unsupported"/>
      <return name="___SBIS_SCALAR_RETURN___">
        <format>
          <type>BOOLEAN</type>
        </format>
      </return>
    </select>
  </object>

</repository>
