<?xml version="1.0" encoding="WINDOWS-1251"?>
<repository orx_version="1.71">

  <object last_changed="as.prudnikova" name="Email" responsible="as.prudnikova">
    <select access_mode="0" is_service="0" last_changed="as.prudnikova" name="Email.EmailCheck" responsible="as.prudnikova" returns="SCALAR" type="PYTHON">
      <parameter name="Данные">
        <format>
          <type>RECREFERENCE</type>
          <free>1</free>
        </format>
      </parameter>
      <return name="___SBIS_SCALAR_RETURN___">
        <format>
          <type>BOOLEAN</type>
        </format>
      </return>
      <definition>
        <language>PYTHON</language>
        <body>message = ''
subject = ''
#возможные значения int(Данные["ТипСообщения"])
#scastPHONE_CHECK = 0,        //проверка правильности ввода телефона
#scastEMAIL_CHECK = 1,        //проверка правильности ввода email
#scastPHONE_ACTIVATION = 2,   //активация ключа по СМС
#scastEMAIL_ACTIVATION =3     //активация ключа по Email
if ( ( Данные.TestField("Email") is None ) and ( Данные.TestField("Код") is None ) ) or ( Данные.TestField("ТипСообщения") is None ):
   return False
if Данные.TestField("ТипСообщения") is not None:
   message = "Вы запросили проверку почтового адреса. Проверочный код: %s" % Данные["Код"].RefString()
   subject = "Проверка почтового адреса для настройки подтверждения использования ключа электронной подписи"
if Данные.TestField("Email") is not None:
   try:
      import smtplib
      from email.mime.text import MIMEText
      from email.header import Header
      from email.mime.multipart import MIMEMultipart
      import quopri
      def QuoHead(String):
         s = quopri.encodestring(String.encode('windows-1251'), 1, 0)
         return "=?windows-1251?Q?" + s.decode('windows-1251') + "?="
      receivers = [Данные["Email"].RefString()]
      sender = ConfigGet( "ПочтовыйЯщикДляРассылок.АдресОтправителя" )
      host = ConfigGet( "ПочтовыйЯщикДляРассылок.Сервер" )
      port = ConfigGet( "ПочтовыйЯщикДляРассылок.Порт" )
      msg = MIMEMultipart()
      msg["Subject"] = QuoHead(subject).replace('=\n', '')
      msg["From"] = (QuoHead("СБИС") + "  &lt;" + sender + "&gt;").replace('=\n', '') 
      msg["To"] = ','.join(receivers)
      text = MIMEText(message, 'html', 'windows-1251')
      msg.attach(text)
      smtpObj = smtplib.SMTP( host, port )
      smtpObj.login( ConfigGet( "ПочтовыйЯщикДляРассылок.Логин" ), ConfigGet( "ПочтовыйЯщикДляРассылок.Пароль" ) ) #аутентифицируемся на почтовом сервере
      smtpObj.sendmail( sender, receivers, msg.as_string() )
      return True
   except:
      return False
return False</body>
      </definition>
    </select>
  </object>

</repository>
