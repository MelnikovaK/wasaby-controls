<?xml version="1.0" encoding="WINDOWS-1251"?>
<repository orx_version="1.71">

  <object last_changed="Шаброва А.Н." name="РолиПользователя" responsible="Шаброва А.Н.">
    <select access_mode="0" is_service="0" last_changed="Шаброва А.Н." name="РолиПользователя.ДобавитьПользователей" responsible="Шаброва А.Н." returns="NONE" type="PYTHON">
      <parameter name="Роль">
        <format>
          <type>TEXT</type>
        </format>
      </parameter>
      <parameter name="Пользователи">
        <format>
          <type>INT4[]</type>
        </format>
      </parameter>
      <parameter name="АдресСервиса">
        <format>
          <type>TEXT</type>
        </format>
      </parameter>
      <definition>
        <language>PYTHON</language>
        <body>import rights_ctrl

userID = Session.UserID()
clientID = Session.ClientID()
if userID is None or clientID is None :
   Error( 'Не удалось определить пользователя или клиента' )

if rights_ctrl.isCurrentService( Session.Get( WebServerContextKey.icsHOST ), Session.Get( WebServerContextKey.icsREQUEST_URI ), АдресСервиса ) :
   return РолиПользователя.ДобавитьПользователей( Роль, Пользователи )

sid = САП.ВнутренняяАутентификация( userID, clientID )
param = Record()
param.AddString( 'Роль', Роль )
param.AddArrayInt32( 'Пользователи' )
param[ 'Пользователи' ].From( Пользователи )
res = Record()
res.AddBool('res',False)
rc = RemoteCommandRecParam('РолиПользователя.ДобавитьПользователей',param,res[0])
rc.execute( АдресСервиса + '/service/', sid )
return</body>
      </definition>
    </select>
    <select access_mode="0" is_service="0" last_changed="Шаброва А.Н." name="РолиПользователя.УдалитьПользователей" responsible="Шаброва А.Н." returns="NONE" type="PYTHON">
      <parameter name="Роль">
        <format>
          <type>TEXT</type>
        </format>
      </parameter>
      <parameter name="Пользователи">
        <format>
          <type>INT4[]</type>
        </format>
      </parameter>
      <parameter name="АдресСервиса">
        <format>
          <type>TEXT</type>
        </format>
      </parameter>
      <definition>
        <language>PYTHON</language>
        <body>import rights_ctrl
   
userID = Session.UserID()
clientID = Session.ClientID()
if userID is None or clientID is None :
   Error( 'Не удалось определить пользователя или клиента' )

if rights_ctrl.isCurrentService( Session.Get( WebServerContextKey.icsHOST ), Session.Get( WebServerContextKey.icsREQUEST_URI ), АдресСервиса ) :
   return РолиПользователя.УдалитьПользователей( Роль, Пользователи )

sid = САП.ВнутренняяАутентификация( userID, clientID )
param = Record()
param.AddString( 'Роль', Роль )
param.AddArrayInt32( 'Пользователи' )
param[ 'Пользователи' ].From( Пользователи )
res = Record()
res.AddBool('res',False)
rc = RemoteCommandRecParam('РолиПользователя.УдалитьПользователей',param,res[0])
rc.execute( АдресСервиса + '/service/', sid )
return</body>
      </definition>
    </select>
    <select access_mode="0" is_service="0" last_changed="Шаброва А.Н." name="РолиПользователя.Установить" responsible="Шаброва А.Н." returns="SCALAR" type="PYTHON">
      <parameter name="Пользователь">
        <format>
          <type>INT64</type>
        </format>
      </parameter>
      <parameter name="Роли">
        <format>
          <type>TEXT[]</type>
        </format>
      </parameter>
      <parameter name="АдресСервиса">
        <format>
          <type>TEXT</type>
        </format>
      </parameter>
      <return name="___SBIS_SCALAR_RETURN___">
        <format>
          <type>BOOLEAN</type>
        </format>
      </return>
      <definition>
        <language>PYTHON</language>
        <body>import rights_ctrl

if rights_ctrl.isCurrentService( Session.Get( WebServerContextKey.icsHOST ), Session.Get( WebServerContextKey.icsREQUEST_URI ), АдресСервиса ) :
   return РолиПользователя.Установить( Пользователь, Роли )

sid = САП.ВнутренняяАутентификация( Пользователь, None )
param = Record()
param.AddInt64('Пользователь', Пользователь )
param.AddArrayString( 'Роли' )
param['Роли'].From( Роли )
res = Record()
res.AddBool('res',False)
rc = RemoteCommandRecParam('РолиПользователя.Установить',param,res[0])
rc.execute( АдресСервиса + '/service/', sid )
return bool(res[0])</body>
      </definition>
      <area_of_sight alias="ОбластьВидимости.НазначениеРолейНеБольшеСвоих" name="ОбластьВидимости.НазначениеРолейНеБольшеСвоих"/>
    </select>
  </object>

  <object last_changed="Шаброва А.Н." name="Роль" responsible="Шаброва А.Н.">
    <select access_mode="1" is_service="0" last_changed="Шаброва А.Н." name="Роль.Прочитать" responsible="Шаброва А.Н." returns="RECORD" type="PYTHON">
      <parameter name="ИдО">
        <format>
          <type>TEXT</type>
        </format>
      </parameter>
      <parameter name="ИмяМетода">
        <format>
          <type>TEXT</type>
        </format>
      </parameter>
      <parameter name="АдресСервиса">
        <format>
          <type>TEXT</type>
        </format>
      </parameter>
      <parameter name="ИдПользователя">
        <format>
          <type>INTEGER</type>
        </format>
      </parameter>
      <return name="@Роль">
        <format>
          <type>OBJECT_IDENTIFIER</type>
        </format>
      </return>
      <return name="Название">
        <format>
          <type>TEXT</type>
        </format>
      </return>
      <return name="Примечание">
        <format>
          <type>TEXT</type>
        </format>
      </return>
      <return name="Скрытая">
        <format>
          <type>BOOLEAN</type>
        </format>
      </return>
      <return name="Системная">
        <format>
          <type>BOOLEAN</type>
        </format>
      </return>
      <return name="СписокЗон">
        <format>
          <type>RECORDSET</type>
        </format>
      </return>
      <return name="Родители">
        <format>
          <type>RECORDSET</type>
        </format>
      </return>
      <return name="Наследники">
        <format>
          <type>RECORDSET</type>
        </format>
      </return>
      <definition>
        <language>PYTHON</language>
        <body>import rights_ctrl

if rights_ctrl.isCurrentService( Session.Get( WebServerContextKey.icsHOST ), Session.Get( WebServerContextKey.icsREQUEST_URI ), АдресСервиса ) :
   return Роль.Прочитать( ИдО, ИмяМетода )

sid = САП.ВнутренняяАутентификация( ИдПользователя, None )
param = Record()
param.AddString('ИдО', ИдО )
param.AddString( 'ИмяМетода', ИмяМетода )
res = Record()
rs = CreateRecordPointer()
res.AddRecord('result', rs.Format(), rs)
rc = RemoteCommandRecParam('Роль.Прочитать',param,res[0])
rc.execute( АдресСервиса + '/service/', sid )
ret = CloneRecord(res[0].RefRecord())
return ret</body>
      </definition>
    </select>
  </object>

</repository>
