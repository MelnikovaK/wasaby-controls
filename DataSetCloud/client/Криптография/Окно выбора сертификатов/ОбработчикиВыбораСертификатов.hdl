hdl =
{
   moreButtonClick : function( record, fieldname ) {
      var self = this;
      require(["js!SBIS3.CRYPTO.Plugin"], function( pluginModule ){
         pluginModule.init().addCallback( function(crypto_applet){
            crypto_applet.NewCertificate().addCallback( function( cert ){
               cert.Load( self.cert_file ).addCallback( function( res ){
                  if( res )
                     cert.ShowWindow();
               });
            });
         });
      });
   },
   
   onInfoStrRender: function( record, row ) {
      var img_root = $ws._const.resourceRoot + 'Kriptografiya/images/',
          hint = 'Ключ на носителе';
          img_name = 'token_key.png';
      if( ( record.hasColumn( 'ИмяКонтейнера' ) && record.get("ИмяКонтейнера") ) || record.get("@Сертификат") > 0 ){
         img_name = 'server_key.png';
         hint = 'Ключ на сервере';
      }
      //строка вида: "[ФИО]([Должность]),        [Название организации]([ИНН]),       действует до [ДействителенПо]"
      //которя будет отображаться в окне выбора сертификатов
      var info_string = record.get("ФИО"),
         cert_title = record.get("Должность"),
         cert_org_name = record.get("Организация"),
         cert_INN = record.get("ИНН");
      if( cert_title.length !== 0 ){
         info_string += ' (' + cert_title + ')';
      }
      info_string += ", ";
      if( cert_org_name.length !== 0 ){
         info_string += cert_org_name;
         if( cert_INN.length !== 0 ){
            info_string += ' (' + cert_INN + ')';
         }
         info_string += ', ';
      }
      
      var currDate = new Date();
      var expirDate = new Date( record.get("ДействителенПо") );
      var need_to_grey = false;
      var not_qualified = false;
      if( expirDate < currDate ){
         info_string += 'просрочен (до '  + record.get("ДействителенПо").toSQL() + ')';
         need_to_grey = true;
      }
      else
         info_string += 'действует до '  + record.get("ДействителенПо").toSQL();
      if( !record.get("Квалифицированный") ){
         need_to_grey = true;
         not_qualified = true;
      }
      return $(
         '<div style="cursor:pointer; overflow: hidden; text-overflow: ellipsis" title="' + info_string + '">' +
            '<img style="float: left; margin-top: 2px;" src="' + img_root + img_name + '" title="' + hint + '"/>' +
            ( not_qualified ? '<div style="float: right; margin-top: 2px;" class="icon-16 icon-Alert icon-attention" title="Неквалифицированный сертификат!"/>' : '' ) +
            '<div style="margin-left: 16px; overflow: hidden; text-overflow: ellipsis;' + ( not_qualified ? 'margin-right: 16px; ' : '' ) + ( need_to_grey ? 'color:grey;"' : '"' ) + '>' + info_string + '</div>' +
         '</div>'
      );
   },
      
   // Метод рендеринга строки таблицы выбора сертификатов
   onRowRender: function( record, row ) {
      var more_button = $ws.single.ControlStorage.containsByName( 'ПодробнееСертификат' )
            ? $ws.single.ControlStorage.getByName( 'ПодробнееСертификат' ) : null,
            table = this.getContainer();
      // Отображаем кнопку 'Подробнее' только когда курсор находится на таблице выбора сертификатов
      if( more_button ){
         row.mouseenter( function() {
            if( !more_button.isVisible() && more_button.isEnabled() )
               more_button.show();
            more_button.getContainer().css( 'top', row.offset().top - ( table.offset().top + 3 ) );
            more_button.cert_file = record.get('Файл');
         });
         
         table.mouseleave( function( event ){
            var dx = event.clientX - table.offset().left;
            var dy = event.clientY - table.offset().top;
            if( dy < table.height() && dy > 0
               && dx < table.width() && dx > 0 )
               return;
            if( more_button.isVisible() )
               more_button.hide();
         });
      }
   },
   
   onRefreshButtonClick: function(){
      $ws.single.ControlStorage.getByName( 'КнопкаОбновленияСпискаСертификатов' ).setEnableStatus(false);
      var self = this;
      $ws.core.attach( $ws._const.resourceRoot + 'Kriptografiya/Okno_vybora_sertifikatov/certificate_load.js' ).addCallback(function(){
         RefreshCertificatesInWindow( self );
      });
   }
   
   
}

