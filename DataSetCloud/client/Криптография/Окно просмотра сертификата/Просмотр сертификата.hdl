hdl = {
   //При открытии окна
   onViewCertOpen: function() {
      var linkedContext = this.getLinkedContext();
      //Заполним окно данными из linkedContext
      fillWindow( linkedContext );
      //Если окно само по себе( не используется в качестве шаблона ), то сделаем отступ снизу
      if( this === this.getTopParent() )
         this.setSize( { width: this.getContainer().width(), height: this.getContainer().height() + 16, centering: true } );
   },
   
   //По кнопке "Сохранить"
   onCertificateSave: function(){
      var linkedContext = this.getLinkedContext();
      $ws.helpers.saveToFile( "Сертификат", "СкачатьФайл", { "Данные" : linkedContext.getValue( "Файл" ), "Отпечаток" : linkedContext.getValue( "Отпечаток" ) } );
   },
   
   //По кнопке "Распечатать"
   onCertificetePrint: function(){
      var rec = this.getTopParent().getLinkedContext().getRecord();
      $ws.core.attachInstance('Control/Area:Dialog', {
         record : rec,
         template : 'Сертификат',
         opener : this
      });
   }
}

function fillWindow( linkedContext ){
      //Тип ключа
      //Так как не всегда можем определить имя контейнера( соответственно тип ключа на носителе/на сервере ), то сначала проверим существование поля
      var key_type = ( linkedContext.getValue( "ИмяКонтейнера" ) !== undefined ) ? ( linkedContext.getValue( "ИмяКонтейнера" ) ? 'на сервере' : 'на носителе' ) : ''; 
      //Издатель
      var issuer = '<div>выдана: ' + ( linkedContext.getValue( "ВыданУЦТензор" ) ?
      '<style>#tensor_ca_link:hover{text-decoration: none !important}</style> <a id = "tensor_ca_link" target="_blank" style="color:#999999; text-decoration: underline;" href = "http://tensor.ru/trends/tr_udo/getting_key" > ООО "Компания "Тензор", Ярославль</a>'
      : linkedContext.getValue( "Издатель" ) ) + '</div>';
      //Статус
      var statuses = {
         1: "неопознанная ошибка при проверке сертификата. Обратитесь в тех. поддержку.",                 //"Неопознанная ошибка при проверке сертификата." (ctsUNKNOWN_ERROR)
         2: "сертификат электронной подписи повреждён. Обратитесь в тех. поддержку.",                     //"Сертификат повреждён." (ctsDAMAGED)
         3: "недействительна: ошибка сервера. Обратитесь в тех. поддержку.",                              //"Криптопровайдер не установлен или повреждён." (tsNO_PROVIDER)
         4: ( ( linkedContext.getValue("ДействителенС") > new Date() ) ?                                       //"Срок действия сертификата истёк или ещё не наступил." (ctsNOT_TIME_VALID)
         "действие начнётся " + linkedContext.getValue("ДействителенС").strftime('%d.%m.%Y г. %H:%M')
         : "действие закончилось " + linkedContext.getValue("ДействителенПо").strftime('%d.%m.%Y г. %H:%M') ),
         5: "недействительна: нет доверия к издателю",                                                    //"Последний сертификат цепи не является доверенным корневым сертификатом." (ctsUNTRUSTED_ROOT)
         6: "недействительна: неизвестный издатель",                                                      //"Цепь сертификатов не закончена." (ctsPARTIAL_CHAIN)
         7: "отозвана",                                                                                   //"Сертификат отозван." (ctsREVOKED)
         8: "недействительна: нет возможности проверить статус отзыва. Обратитесь в тех. поддержку.",     //"Неизвестен статус отозванности одного из сертификатов цепи." (ctsUNKNOWN_REVOCATION_STATUS)
         9: "недействительна: один из сертификатов удостоверяющей цепи не имеет правильной подписи",      //"Один из сертификатов удостоверяющей цепи не имеет правильной подписи." (ctsINVALID_SIGNATURE)
         10: "не удалось проверить действительность электронной подписи"
      };
      var status = ( linkedContext.getValue("Действителен") ) ?
      '<div>действительна с ' + linkedContext.getValue( "ДействителенС" ).strftime('%d.%m.%Y г. %H:%M') + ' по ' + linkedContext.getValue("ДействителенПо").strftime('%d.%m.%Y г. %H:%M') + '</div>'
      : '<div style="color: #EF463A;">' + statuses[ linkedContext.getValue("КодСостояния") ] + '</div>';
      //ФИО
      var fio = '<div>' + linkedContext.getValue("ФИО") + '</div>';
      //Данные о физ. лице
      var fiz = ( linkedContext.getValue("СНИЛС") || linkedContext.getValue("Должность") || linkedContext.getValue("ЭлектроннаяПочта") ) ? ( '<div>' + ( ( linkedContext.getValue("СНИЛС") ? ( 'СНИЛС: ' + linkedContext.getValue("СНИЛС") ) : '' ) + ', ' + linkedContext.getValue("Должность") + ', ' + linkedContext.getValue("ЭлектроннаяПочта") ).replace(', ,', ',').replace( /^,\s|,\s$/g, '' ) + '</div>' ) : '';
      //Организация
      var org = linkedContext.getValue("Организация") ? '<div>' + linkedContext.getValue("Организация") + '</div>' : '';
      //ИНН, ОГРН/ОГРНИП
      var numbers = '<div>' + 'ИНН: ' + linkedContext.getValue("ИНН") + ( ( linkedContext.getValue("ОГРН") || linkedContext.getValue("ОГРНИП") ) ? ( linkedContext.getValue("ОГРН") ? ( ', ОГРН: ' + linkedContext.getValue("ОГРН") ) : ( ', ОГРНИП: ' + linkedContext.getValue("ОГРНИП") ) ) : '' ) + '</div>';
      //Область, город, улица
      var address = '<div>' + linkedContext.getValue("Регион") + ', ' + linkedContext.getValue("Город") + ( linkedContext.getValue("Улица") ? ( ', ' + linkedContext.getValue("Улица") ) : '' ) + '</div>';
      //Подразделение
      var subdivision = ( linkedContext.getValue("Подразделение") && linkedContext.getValue("Подразделение") != "0" ) ? '<div>' + 'Подразделение: ' + linkedContext.getValue('Подразделение') + '</div>' : '';
      //Рег. номер в ФСС
      var fss = linkedContext.getValue("РегНомерФСС") ? '<div>' + 'Рег. номер в ФСС: ' + linkedContext.getValue("РегНомерФСС") + '</div>' : '';
      //Серийный номер
      var ser = '<div>' + 'Серийный номер: ' + linkedContext.getValue("СерийныйНомер") + '</div>';
      //Отпечаток
      var id = '<div>' + 'Отпечаток: ' + linkedContext.getValue("Отпечаток") + '</div>';
      //Квалифицированный
      var qual = '<div>' + 'Квалифицированная: ' + ( linkedContext.getValue("Квалифицированный") ? 'Да' : 'Нет' ) + '</div>';
      
      var html = '<div style="color:#999999;" >' + key_type + issuer + status + '</div>' + '<div style="margin-top: 7px;" >' + fio + '<span style="color: #999999;" >' + fiz + '</span>' + '</div>' + '<div style="margin-top: 7px;" >' + org + '<span style="color: #999999;" >' + numbers + address + subdivision + fss + '</span>' + '</div>' + '<div style="margin-top: 7px;" >' + qual + '<span style="color: #999999;" >' + ser + id + '</span>' + '</div>' ;
      //Установим набранные данные в окно
      $ws.single.ControlStorage.getByName("ДанныеСертификата").setContent( html );
}