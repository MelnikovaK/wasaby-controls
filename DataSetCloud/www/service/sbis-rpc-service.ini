[Базовая конфигурация]
;Идентификаторы служебных пользователей и их клиентов
;ИдАдминистратора=1
;ИдАдминистратораПользователя=2
;ИдГостя=3
;ИдГостяПользователя=4
;ИдСервиса=9

;Список классов пользователей с идентификаторами
;КлассыПользователя=__сбис__администратор:1;__сбис__сервисы:9;__сбис__клиенты:8;__сбис__демоклиенты:13;__сбис__гость:3;__сбис__cвободныеклиенты:12;__сбис__удаленные:11

;Укажите путь к каталогу расположения модулей сервиса бизнес - логики
Модули=Модули

;Этот параметр заполнять не нужно, он используется только при отладке приложения
ПаузаПередЗагрузкойМодулей=0

;Параметр для получения конфигурации из Управления облаком при загрузке сервиса.
;В ini-файлах сервисов Управление облаком и Аутентификации параметра "Конфигурация" быть не должно!
;Конфигурация=Облако='URL облака' Логин='Логин админа' Пароль='Пароль админа'
;Этот параметр задает количество запускаемых рабочих процессов rpc-сервиса. Рабочий процесс - 
;это экземпляр приложения sbis-rpc-worker300.exe, который загружает набор модулей и занимается исполнением запросов
;от клиентов. Чем больше этот параметр, тем больше запросов может обрабатываться параллельно и тем больше потребление
;оперативной памяти и процессорного времени. По умолчанию - 1
;ЧислоРабочихПроцессов=1

;Этот параметр испольузется при отладке. По умолчанию, диспетчер очереди rpc-сервиса каждую минуту опрашивает рабочие процессы
;для того, чтобы проверить их работоспособность, и, если процесс не отвечает в течение 10 секунд, то вместо него запускается новый
;экземпляр, а клиенту возврашается ошибка timeout.
;Чтобы подобное поведение не мешало отладке, заставляя диспетчер снова и снова порождать рабочие процессы из-за того, что они
;не в состоянии ответить на его запросы, т.к. приостановлены отладчиком, следует выставить данный параметр в значение Нет.
;ПроверятьРаботоспособностьПроцессов=Да
 

;Количество дополнительных рабочих процессов, которые диспетчер может запустить в случае накопления очереди. 
;Отрицательное значение означает, что процессы можно запускать без ограничений (не рекомендуется). По умолчанию равен нулю.
;ЧислоДополнительныхПроцессов=0


;Промежуток времени, через который запускаются дополнительные рабочие процессы, если осталась такая необходимость. 
;Время задается в секундах. По умолчанию равен 15 секундам.
;ИнтервалЗапускаДополнительныхПроцессов=15


;Если в течение данного промежутка времени дополнительный рабочий процесс не получает заданий, то он прекращает свою работу.
;Время задается в секундах. По умолчанию равен значению параметра "ИнтервалЗапускаДополнительныхПроцессов".
;ВремяПростояДополнительныхПроцессов=40


;Если какой-либо запрос провел в очереди больше времени, чем значение данного параметра, то диспетчер будет запускать дополнительные рабочие процессы. 
;Значение задается в секундах. По умолчанию равно 10 секундам.
;ИнтервалПроверкиОчереди=10


;Укажите IP - адрес сервера Redis используемого в качестве хранилища сесссий
;Новый синтакис:
;ХранилищеСессий=host='localhost' port='6379' dbindex='1'
;параметры port и dbindex можно не указывать, в таком случае port='6379' dbindex='0'
ХранилищеСессий=127.0.0.1

;IP - адрес сервера Redis используемого в качестве хранилища общего назначения
ХранилищеОбщегоНазначения=127.0.0.1

;Адрес сервера Redis, который используется для хранения ревизий клиентов при репликации пользователей
;ХранилищеРевизийКлиентов=127.0.0.1

;Укажите параметры подключения с серверу БД
;Для PostgreSQL параметр будет выглядеть примерно так:
;БазаДанных=postgresql: host='localhost' port='5432' dbname='sbis' user='postgres' password='postgres'
БазаДанных=postgresql: host='localhost' port='5432' dbname='sbis3.0.trunk' user='postgres' password='postgres'

;Название группы серверов из структуры облака. По нему определяются специфичные для сервиса настройки облака.
;ГруппаСерверов=Управление облаком

;Укажите размер кэша сессий, если сессий будет больше этого количества, 
;то информация хранимая в кэше для сессий менее активных будет вытеснена
РазмерКэшаСессий=3

;Время, при превышении которого в лог быдет выведено сообщение о том, что триггеры ( C++ ) исполнялись дольше положенного
;Будет выведено общее время выполнения триггеров, имя вызываемого метода и детализация по каждому триггеру
;По умолчанию разрешенное время равно 1000мс
;МаксимальноеВремяВыполненияТриггеров=50

;Укажите "Да", если нужно логировать SQL-запросы
ОтслеживатьSQLКоманды=Нет

;Возможность логирования RPC-вызовов
ЛогированиеВызововRPC = Нет
;Укажите ограничение длины записываемого RPC-вызова (когда логирование включено, т.е. ЛогированиеВызововRPC=Да) в байтах.
;По умолчанию 512 байт. Укажите 0, если нужно писать вызов целиком
;ОграничениеЛогированияВызововRPC=0

;Отслеживать ли исходящие RPC-вызовы. Настройка не читается из БД, задаётся только в sbis-rpc-service.ini
ЛогированиеИсходящихВызововRPC=Нет
;Укажите ограничение длины записываемого RPC-вызова (когда логирование включено, 
;т.е. ЛогированиеИсходящихВызововRPC=Да) в байтах. Укажите 0, если нужно 
;писать вызов целиком. По умолчанию 512. Настройка не читается из БД, задаётся только в sbis-rpc-service.ini
ОграничениеЛогированияИсходящихВызововRPC=0

;Возможность логирования точек входа и выхода из функций в серверных скриптах.По умолчанию 'Нет'.
;ЛогированиеСерверныхСкриптов=Нет
; Максимальное время выполнения JavaScript на сервере. Задается в секундах. ( По-умолчанию = -1. Ограничение времени выполнения скрипта отключено )
МаксимальноеВремяВыполненияСкрипта=-1
; Лимит стека вызовов v8. Задается в килобайтах. ( По-умолчанию = -1. Ограничение стека вызовов v8 отключено )
ЛимитСтекаВызововV8=-1

ПроверятьПраваПользователя=Нет

;Расширенное логирование прав. По умолчанию 'Нет'.
;ЛогированиеПрав=Да

;После скольки вызовов методов бизнес-логики выполнять профилактическое рассоединение с сервером БД
;По умолчанию 1
;Если указано 0, то рассоединение не производится.
;КоличествоВызововПередРассоединением=1

;Время простоя сервиса (в секундах), по истечению которого будет разрываться соединение с сервером БД
;РазрыватьСоединениеСБДПоТаймауту=600

;Укажите за сколько дней хранить логи, все остальные будут удаляться
;УдалятьСтарыеЛоги=3

;Отправлять логи по сети на удаленный сервер
;для коректной работы необходимо прописать путь к серверу сбора логов в параметр 'АдресСервисаЛогов'
;ЛогированиеПоСети=Да

;Насколько подробные дампы нужно писать.
;2 режима: Полный - запись ВСЕЙ памяти приложения; Нормальный - запись только стека приложения
;По умолчанию Полный
;РежимЗаписиДампов=Полный

;Период обновления прав, по умолчанию три минуты
;ПериодОбновленияПрав = 60

;Параметры определяющие адреса сервисов аутентификации и администрирования + учетную запись,
;под которой сарвис (!) обращается к другим сервисам.
;Примечание, учатная запись должна существовать на сервисе аутентификации. Сервис аутентификации
;может быть в другом облаке
;используются модулем "Администрирование клиента"
;АдресСервисаАутентификации=http://localhost/auth
;АдресСервисаАдминистрирования=http://localhost/admin
;АдресСервисаЛогов=http://localhost/log
;СлужебныйЛогин=admin
;СлужебныйПароль=
;Является ли текущий сервис - сервисом аутентификации. По умолчанию 'Нет'
;СервисАутентификации=Нет

;Параметры для модуля "Клиент биллинга"
;Адрес сервиса биллинга
;Биллинг=
;Адрес сервиса аутентификации в биллинге
;БиллингАутентификация=
;Служебный логин аутентификации в биллинге
;БиллингЛогин=
;Служебный пароль аутентификации в биллинге
;БиллингПароль=

;;Чтобы включить показ статистики работы сервиса, задайте следующие 5 параметров.
;;Страница статистики будет доступна по адресу вида http://localhost:81/sbis-rpc-service300.dll?monitor
;ВедениеСтатистики=ДА
;;Красивое название сервиса (без пробелов; раньше именовалось "НазваниеСервиса")
;ГруппаСерверов=Тест30
;;Адрес сервера Redis для хранения статистики работы сервиса (раньше именовалось АдресСервисаRedis и ПортRedis)
;ХранилищеСтатистики=127.0.0.1:6379
;;Ключ для хранения данных в Redis
;ИмяВRedis=test_service

;Схема может сгенерироваться только роботом или
;по первому запросу клиента. По умолчанию 'Да'.
;ГенерацияПерсональныхДанныхТолькоРоботом=Нет

;;Период (в миллисекундах) ожидания запроса в очереди. Если время выполнения запроса превысило 
;;это значение, следующие поступающие запросы, а также уже стоящие в очереди, отбрасываются с ошибкой
;;503 Service Unavailable. По умолчанию = 0, т.е. принимаются все запросы, никакие не отбрасываются.
;ПериодОжиданияЗапросаВОчереди=1000

;Отправлять данные об успешной аутентификации. По умолчанию 'Нет'.
;ОповещатьСлушателейОбАутентификации=Нет

;Хранилище кэшированных результатов методов бизнес-логики
ХранилищеКэшированияМетодов=localhost

;;Параметр включает/отключает отложенную загрузку методов бизнес логики. По умолчанию отложенная загрузка включена
;;Если отложенная загрузка отключена, то все методы бизнес логики будут загружены при запуске приложения, иначе - при первом вызове метода.
;;Отключение ленивой загрузки может использоваться для проверки корректности модулей - он позволяет прогрузить при запуске сразу все методы бизнес логики
;ЛениваяЗагрузкаОбъектов=Нет

;Параметр включает/отключает проверку формата сессии
;по умолчанию проверка осуществляется ( ПроверкаФорматаСессии = Да )
;ПроверкаФорматаСессии=Нет

;нужно ли подробно логировать запуск сервиса, в частности выводить в логи регистрацию ВСЕХ методов бизнес-логики
;ПодробноеЛогированиеЗапуска=Нет

ПоддержкаМногобазности=Нет

;Время актуальности временного логина, при первичном создании клиента в минутах
ВремяЖизниВременногоЛогина=1440 ;24*60=1440 - сутки
;Время актуальности временного логина, при первичном создании клиента в минутах
ВремяЖизниВременногоЛогинаПриРегистрации=10080; 7*24*60=10080 - неделя

[Аутентификация]
Сайт=localhost

;Адрес сервиса аутентификации
[СервисАутентификацииСайта]
Адрес=http://localhost/auth
